{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","components/Logo.js","helper/helpers.js","components/DashboardNavbar.js","components/NavItem.js","components/DashboardSidebar.js","components/AdminDashboardSidebar.js","components/DashboardLayout.js","components/MainNavbar.js","components/MainLayout.js","components/account/AccountProfile.js","components/account/AccountProfileDetails.js","pages/Account.js","components/alertdialog/LoadingProgress.js","components/customer/CustomersDialog.js","utils/getInitials.js","components/alertdialog/DeleteAlert.js","components/snackbar/SuccessSnackBar.js","components/customer/CustomerListResults.js","components/customer/CustomerListToolbar.js","pages/CustomerList.js","components/admin/AdminDialog.js","components/admin/AdminListResults.js","components/admin/AdminListToolbar.js","pages/AdminList.js","components/dashboard/LatestOrders.js","components/dashboard/TotalCustomers.js","components/dashboard/DatePicker.js","pages/Dashboard.js","pages/Login.js","pages/NotFound.js","components/product/Dialog.js","components/product/ProductListToolbar.js","components/product/ProductCard.js","components/alertdialog/AddAlert.js","components/category/CategoryDialog.js","components/category/CategoryListToolbar.js","components/category/CategoryListResult.js","components/additionalresources/ResourcesListToolbar.js","components/additionalresources/ResourcesDialog.js","components/additionalresources/ResourcesListResults.js","pages/ProductList.js","pages/Register.js","components/settings/ResourcesCard.js","pages/Settings.js","components/customer/AddCustomer.js","components/additionalresources/AddResource.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","default","paper","colors","common","white","primary","contrastText","main","text","secondary","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","Logo","props","alt","src","getToken","sessionStorage","getItem","JSON","parse","getUsername","getRole","logout","next","removeItem","DashboardNavbar","onMobileNavOpen","rest","useState","notifications","navigate","useNavigate","open","setOpen","handleClose","AppBar","elevation","Dialog","keepMounted","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","id","DialogActions","Button","onClick","replace","Toolbar","to","Box","sx","flexGrow","Hidden","lgDown","IconButton","color","Badge","badgeContent","length","variant","lgUp","NavItem","href","Icon","icon","title","useLocation","active","matchPath","path","end","pathname","ListItem","disableGutters","display","py","component","RouterLink","justifyContent","textTransform","mr","size","user","items","BarChartIcon","UsersIcon","SupervisorAccount","ShoppingBagIcon","SettingsIcon","DashboardSidebar","onMobileClose","openMobile","useEffect","content","flexDirection","alignItems","p","Avatar","blue","cursor","Typography","Divider","List","map","item","m","pt","Drawer","anchor","PaperProps","defaultProps","AdminDashboardSidebar","DashboardLayoutRoot","experimentalStyled","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","isMobileNavOpen","setMobileNavOpen","MainNavbar","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","AccountProfile","React","avatar","userimage","setUSerimage","mainState","selectedFile","state","setState","Card","CardContent","gutterBottom","moment","format","CardActions","Grid","container","justify","style","accept","multiple","type","onChange","event","target","files","htmlFor","fullWidth","URL","createObjectURL","formData","FormData","append","console","log","values","axios","put","then","res","catch","err","states","value","label","AccountProfileDetails","firstName","lastName","email","phone","country","setValues","handleChange","name","autoComplete","noValidate","CardHeader","subheader","spacing","md","xs","TextField","helperText","required","select","SelectProps","native","option","Account","Helmet","minHeight","Container","maxWidth","lg","LoadingProgress","CircularProgress","CustomersDialog","Services","category","incrementCounter","product","alertopen","setAlertOpen","service","setService","handleChanges","cats","setCategory","handleCategoryChange","setLocation","handleLocationChange","initialValues","firstname","lastname","voucher","validationSchema","Yup","shape","max","onSubmit","process","headers","authorization","errors","handleBlur","handleSubmit","touched","isSubmitting","error","onBlur","MenuItem","split","slice","v","toUpperCase","join","DeleteAlert","handleSnackOpen","endpoint","success","setSuccess","response","delete","status","Promise","all","handleDelete","Alert","ref","SuccessSnackBar","reason","Snackbar","autoHideDuration","severity","CustomerListResults","customers","setId","setIsDisabled","snackopen","setSnackOpen","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","prod","setProduct","disabled","minWidth","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","newSelectedCustomerIds","customer","TableBody","hover","selected","selectedIndex","concat","handleSelectOne","handleClickOpen","avatarUrl","getInitials","examResult","published_at","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","rowsPerPage","rowsPerPageOptions","CustomerListToolbar","prop","mt","InputProps","startAdornment","InputAdornment","position","SvgIcon","placeholder","CustomerList","examcat","setexamcat","setCountry","counter","updateCounter","get","data","categories","entry","push","locations","AdminDialog","users","handleAlertClose","first_name","last_name","username","password","post","AdminListResults","admins","selectedUserIds","setSelectedUserIds","admin","setAdmin","newSelectedUserIds","updated_at","AdminListToolbar","AdminList","LatestOrders","endIcon","TotalCustomers","progressopen","setProgressOpen","setTitle","pdf","document","setDocument","handleUploadClick","orange","Android12Switch","styled","Switch","borderRadius","transform","backgroundImage","encodeURIComponent","getContrastText","boxShadow","DatePicker","setChecked","Date","setValue","red","LocalizationProvider","dateAdapter","AdapterDateFns","MobileDateTimePicker","newValue","onError","minDate","inputFormat","mask","renderInput","params","FormGroup","FormControlLabel","control","startExam","exactTimeAndDate","Dashboard","xl","reverse","sm","Login","alert","setAlert","setSubmitting","identifier","setItem","stringify","jwt","role","mb","pb","Link","NotFound","align","textAlign","marginTop","Transition","forwardRef","Slide","direction","Dialoog","field","f","choice","inputField","setInputeField","addfield","fullScreen","TransitionComponent","edge","aria-label","ml","autoFocus","question","answer","answerIndex","q","setFieldValue","maxHeight","multiline","rows","handleChangeInput","orientation","flexItem","pr","fullwidth","startIcon","ProductListToolbar","ProductCard","choices","cho","AddAlert","setAdd","parentClose","child","setChild","handleCloseChild","setData","add","CategoryListToolbar","CategoryListResults","selectedCategoryIds","setSelectedCategoryIds","newSelectedCategoryIds","ResourcesListToolbar","resource","image","setImage","description","url","ResourcesListResults","resources","selectedResourceIds","setSelectedResourceIds","setResource","newSelectedResourceIds","media","ProductList","catresponse","setCatresponse","resourcesresponse","setResourcesresponse","TabContext","TabList","centered","Tab","TabPanel","Pagination","CategoryListResult","Register","policy","oneOf","underline","FormHelperText","ResourceCard","SettingsView","AddCustomer","radio","setRadio","handleRadioChange","Voucher","generate","gender","snack","FormControl","FormLabel","RadioGroup","row","defaultValue","Radio","AddResource","routes","element","children","Settings","unAuthorisedroutes","App","routing","useRoutes","unauthrouting","ThemeProvider","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6dca60c3.chunk.js","sourcesContent":["/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","/* eslint-disable no-underscore-dangle */\nimport { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: '#F4F6F8',\n      paper: colors.common.white\n    },\n    primary: {\n      contrastText: '#ffffff',\n      main: '#5664d2'\n    },\n    text: {\n      primary: '#172b4d',\n      secondary: '#6b778c'\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","const Logo = (props) => (\n  <img\n    alt=\"Logo\"\n    src=\"/static/logo.svg\"\n    {...props}\n  />\n);\n\nexport default Logo;\n","export const Authenticate=(response,next)=>{\n    if(window!=='undefined'){\n\n\n        sessionStorage.setItem('token',JSON.stringify(response.data.jwt));\n        sessionStorage.setItem('username',JSON.stringify(response.data.user.username));\n        sessionStorage.setItem('role',JSON.stringify(response.data.user.role.name));\n\n\n    }\n    next();\n}\n\nexport const getToken = ()=>{\n    if (window !== 'undefined'){\n        if (sessionStorage.getItem('token')){\n            return JSON.parse(sessionStorage.getItem('token'));\n        }\n        else {\n            return false;\n        }\n\n    }\n    \n}\nexport const getUsername = ()=>{\n    if (window !== 'undefined'){\n        if (sessionStorage.getItem('token')){\n            return JSON.parse(sessionStorage.getItem('username'));\n        }\n        else {\n            return false;\n        }\n\n    }\n    \n}\nexport const getRole = ()=>{\n    if (window !== 'undefined'){\n        if (sessionStorage.getItem('token')){\n            return JSON.parse(sessionStorage.getItem('role'));\n        }\n        else {\n            return false;\n        }\n\n    }\n    \n}\n\nexport const logout = next =>{\n\n    if (window !== 'undefined'){\n        sessionStorage.removeItem('token')\n    }\n    next();\n\n}\n\nexport const isAuthenticated = () =>{\n    if (getToken()){\n        //console.log(getToken());\n        return true;\n    }\n    else {\n        return false;\n\n    }\n}","import { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport Logo from './Logo';\nimport {logout} from 'src/helper/helpers';\n\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\n  const [notifications] = useState([]);\n  \n  const navigate = useNavigate();\n  const [open,setOpen] = useState(false);\n  const handleOpen=()=>{\n    setOpen(true);\n  }\n\n  const handleClose=()=>{\n    setOpen(false);\n  }\n\n  return (\n    <AppBar\n      elevation={0}\n      {...rest}\n    >\n      <Dialog\n            open={open}\n            keepMounted\n            onClose={handleClose}\n            aria-describedby=\"alert-dialog-slide-description\"\n        >\n            <DialogTitle>{\"Warning\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    \n                    Are You Sure You Want To Logout?\n          </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>No</Button>\n                <Button onClick={()=>{logout(()=>{\n                navigate('/login', { replace: true });\n              })}}>Yes</Button>\n            </DialogActions>\n        </Dialog>\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n        <Box sx={{ flexGrow: 1 }} />\n        <Hidden lgDown>\n          <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton onClick = {handleOpen} color=\"inherit\">\n            <InputIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nDashboardNavbar.propTypes = {\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default DashboardNavbar;\n","import {\n  NavLink as RouterLink,\n  matchPath,\n  useLocation\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, ListItem } from '@material-ui/core';\n\nconst NavItem = ({\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const location = useLocation();\n\n  const active = href ? !!matchPath({\n    path: href,\n    end: false\n  }, location.pathname) : false;\n\n  return (\n    <ListItem\n      disableGutters\n      sx={{\n        display: 'flex',\n        py: 0\n      }}\n      {...rest}\n    >\n      <Button\n        component={RouterLink}\n        sx={{\n          color: 'text.secondary',\n          fontWeight: 'medium',\n          justifyContent: 'flex-start',\n          letterSpacing: 0,\n          py: 1.25,\n          textTransform: 'none',\n          width: '100%',\n          ...(active && {\n            color: 'primary.main'\n          }),\n          '& svg': {\n            mr: 1\n          }\n        }}\n        to={href}\n      >\n        {Icon && (\n          <Icon size=\"20\" />\n        )}\n        <span>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import { useEffect,useState } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  ListItem,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions\n} from '@material-ui/core';\nimport {\n\n  AlertCircle as AlertCircleIcon,\n  BarChart as BarChartIcon,\n  Lock as LockIcon,\n  Settings as SettingsIcon,\n  ShoppingBag as ShoppingBagIcon,\n\n  Users as UsersIcon\n} from 'react-feather';\nimport NavItem from './NavItem';\nimport SupervisorAccount from '@material-ui/icons/SupervisorAccountOutlined';\nimport { getUsername, getRole, logout } from 'src/helper/helpers';\nimport { blue } from '@material-ui/core/colors';\nimport {useNavigate} from 'react-router-dom';\n\n\n\nconst user = {\n  avatar: '/static/images/avatars/',\n  jobTitle: 'Super Admin',\n  name: 'Micky'\n};\n\n\n\nconst items = [\n  {\n    href: '/app/dashboard',\n    icon: BarChartIcon,\n    title: 'Dashboard'\n  },\n  {\n    href: '/app/customers',\n    icon: UsersIcon,\n    title: 'Customers'\n  },\n  {\n    href: '/app/admin',\n    icon: SupervisorAccount,\n    title: 'Admin Users'\n  },\n  {\n    href: '/app/questions',\n    icon: ShoppingBagIcon,\n    title: 'Exams'\n  },\n  // {\n  //   href: '/app/account',\n  //   icon: UserIcon,\n  //   title: 'Account'\n  // },\n  {\n    href: '/app/settings',\n    icon: SettingsIcon,\n    title: 'Resources'\n  },\n\n  \n];\n\nconst DashboardSidebar = ({ onMobileClose, openMobile }) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [open,setOpen] = useState(false);\n\n  const handleOpen=()=>{\n    setOpen(true);\n  }\n\n  const handleClose=()=>{\n    setOpen(false);\n  }\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n  }, [location.pathname]);\n\n  const content = (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      }}\n    >\n      <Dialog\n            open={open}\n            keepMounted\n            onClose={handleClose}\n            aria-describedby=\"alert-dialog-slide-description\"\n        >\n            <DialogTitle>{\"Warning\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    \n                    Are You Sure You Want To Logout?\n          </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>No</Button>\n                <Button onClick={()=>{logout(()=>{\n                navigate('/login', { replace: true });\n              })}}>Yes</Button>\n            </DialogActions>\n        </Dialog>\n\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n          p: 2\n        }}\n      >\n        <Avatar\n          component={RouterLink}\n          src={user.avatar}\n          sx={{\n            backgroundColor: blue[900],\n            cursor: 'pointer',\n            width: 64,\n            height: 64\n          }}\n          to=\"/app/account\"\n        />\n        <Typography\n          color=\"textPrimary\"\n          variant=\"h5\"\n        >\n          {getUsername()}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {getRole()}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box sx={{ p: 2 }}>\n        <List>\n          {items.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n          <ListItem\n            disableGutters\n            sx={{\n              display: 'flex',\n              py: 0\n            }}\n\n          >\n            <Button\n\n              sx={{\n                color: 'text.secondary',\n                fontWeight: 'medium',\n                justifyContent: 'flex-start',\n                letterSpacing: 0,\n                py: 1.25,\n                textTransform: 'none',\n                width: '100%',\n\n                '& svg': {\n                  mr: 1\n                }\n              }}\n\n              onClick={handleOpen}\n            >\n              <AlertCircleIcon size=\"20\" />\n        LogOut\n      </Button>\n\n          </ListItem>\n        </List>\n      </Box>\n      <Box sx={{ flexGrow: 1 }} />\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          m: 2,\n          p: 2\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            pt: 2\n          }}\n        >\n\n        </Box>\n      </Box>\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n          PaperProps={{\n            sx: {\n              width: 256\n            }\n          }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden lgDown>\n        <Drawer\n          anchor=\"left\"\n          open\n          variant=\"persistent\"\n          PaperProps={{\n            sx: {\n              width: 256,\n              top: 64,\n              height: 'calc(100% - 64px)'\n            }\n          }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nDashboardSidebar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nDashboardSidebar.defaultProps = {\n  onMobileClose: () => { },\n  openMobile: false\n};\n\nexport default DashboardSidebar;\n","import { useEffect,useState } from 'react';\nimport { Link as RouterLink, useLocation} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  ListItem,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions\n} from '@material-ui/core';\nimport {\n\n  AlertCircle as AlertCircleIcon,\n  BarChart as BarChartIcon,\n  Settings as SettingsIcon,\n  ShoppingBag as ShoppingBagIcon,\n  Users as UsersIcon\n} from 'react-feather';\nimport NavItem from './NavItem';\nimport { getUsername, getRole,logout } from 'src/helper/helpers';\nimport {useNavigate} from 'react-router-dom';\n\n\n\nconst user = {\n  avatar: '/static/images/avatars/',\n  jobTitle: 'Admin',\n  name: 'Micky'\n};\n\n\n\nconst items = [\n  {\n    href: '/app/dashboard',\n    icon: BarChartIcon,\n    title: 'Dashboard'\n  },\n  {\n    href: '/app/customers',\n    icon: UsersIcon,\n    title: 'Customers'\n  },\n\n  {\n    href: '/app/questions',\n    icon: ShoppingBagIcon,\n    title: 'Exam'\n  },\n  // {\n  //   href: '/app/account',\n  //   icon: UserIcon,\n  //   title: 'Account'\n  // },\n  {\n    href: '/app/settings',\n    icon: SettingsIcon,\n    title: 'Resourses'\n  },\n\n  // {\n  //   href: '/register',\n  //   icon: UserPlusIcon,\n  //   title: 'Register'\n  // },\n\n\n];\n\nconst AdminDashboardSidebar = ({ onMobileClose, openMobile }) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [open,setOpen] = useState(false);\n  const handleOpen=()=>{\n    setOpen(true);\n  }\n\n  const handleClose=()=>{\n    setOpen(false);\n  }\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n  }, [location.pathname]);\n\n  const content = (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      }}\n    >\n       <Dialog\n            open={open}\n            keepMounted\n            onClose={handleClose}\n            aria-describedby=\"alert-dialog-slide-description\"\n        >\n            <DialogTitle>{\"Warning\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    \n                    Are You Sure You Want To Logout?\n          </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>No</Button>\n                <Button onClick={()=>{logout(()=>{\n                navigate('/login', { replace: true });\n              })}}>Yes</Button>\n            </DialogActions>\n        </Dialog>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n          p: 2\n        }}\n      >\n        <Avatar\n          component={RouterLink}\n          src={user.avatar}\n          sx={{\n            cursor: 'pointer',\n            width: 64,\n            height: 64\n          }}\n          to=\"/app/account\"\n        />\n        <Typography\n          color=\"textPrimary\"\n          variant=\"h5\"\n        >\n          {getUsername()}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {getRole()}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box sx={{ p: 2 }}>\n        <List>\n          {items.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n          <ListItem\n            disableGutters\n            sx={{\n              display: 'flex',\n              py: 0\n            }}\n\n          >\n            <Button\n\n              sx={{\n                color: 'text.secondary',\n                fontWeight: 'medium',\n                justifyContent: 'flex-start',\n                letterSpacing: 0,\n                py: 1.25,\n                textTransform: 'none',\n                width: '100%',\n\n                '& svg': {\n                  mr: 1\n                }\n              }}\n              \n              onClick = {handleOpen}\n            >\n              <AlertCircleIcon size=\"20\" />\n        LogOut\n      </Button>\n\n          </ListItem>\n        </List>\n      </Box>\n      <Box sx={{ p: 2 }}>\n        <List>\n\n\n\n        </List>\n      </Box>\n      <Box sx={{ flexGrow: 1 }} />\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          m: 2,\n          p: 2\n        }}\n      >\n\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            pt: 2\n          }}\n        >\n\n        </Box>\n      </Box>\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n          PaperProps={{\n            sx: {\n              width: 256\n            }\n          }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden lgDown>\n        <Drawer\n          anchor=\"left\"\n          open\n          variant=\"persistent\"\n          PaperProps={{\n            sx: {\n              width: 256,\n              top: 64,\n              height: 'calc(100% - 64px)'\n            }\n          }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nAdminDashboardSidebar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nAdminDashboardSidebar.defaultProps = {\n  onMobileClose: () => { },\n  openMobile: false\n};\n\nexport default AdminDashboardSidebar;\n","import { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { experimentalStyled } from '@material-ui/core';\nimport DashboardNavbar from './DashboardNavbar';\nimport DashboardSidebar from './DashboardSidebar';\nimport { getRole } from 'src/helper/helpers';\nimport AdminDashboardSidebar from './AdminDashboardSidebar';\n\nconst DashboardLayoutRoot = experimentalStyled('div')(\n  ({ theme }) => ({\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  })\n);\n\nconst DashboardLayoutWrapper = experimentalStyled('div')(\n  ({ theme }) => ({\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  })\n);\n\nconst DashboardLayoutContainer = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden'\n});\n\nconst DashboardLayoutContent = experimentalStyled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto'\n});\n\nconst DashboardLayout = () => {\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <DashboardLayoutRoot>\n      <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\n\n      {getRole() === 'Authenticated' ?\n        <AdminDashboardSidebar\n          onMobileClose={() => setMobileNavOpen(false)}\n          openMobile={isMobileNavOpen}\n        />\n        :\n\n        <DashboardSidebar\n          onMobileClose={() => setMobileNavOpen(false)}\n          openMobile={isMobileNavOpen}\n        />}\n      <DashboardLayoutWrapper>\n        <DashboardLayoutContainer>\n          <DashboardLayoutContent>\n            <Outlet />\n          </DashboardLayoutContent>\n        </DashboardLayoutContainer>\n      </DashboardLayoutWrapper>\n    </DashboardLayoutRoot>\n  );\n};\n\nexport default DashboardLayout;\n","import { Link as RouterLink } from 'react-router-dom';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport Logo from './Logo';\n\nconst MainNavbar = (props) => (\n  <AppBar\n    elevation={0}\n    {...props}\n  >\n    <Toolbar sx={{ height: 64 }}>\n      <RouterLink to=\"/\">\n        <Logo />\n      </RouterLink>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default MainNavbar;\n","import { Outlet } from 'react-router-dom';\nimport { experimentalStyled } from '@material-ui/core';\nimport MainNavbar from './MainNavbar';\n\nconst MainLayoutRoot = experimentalStyled('div')(\n  ({ theme }) => ({\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  })\n);\n\nconst MainLayoutWrapper = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n  paddingTop: 64\n});\n\nconst MainLayoutContainer = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden'\n});\n\nconst MainLayoutContent = experimentalStyled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto'\n});\n\nconst MainLayout = () => (\n  <MainLayoutRoot>\n    <MainNavbar />\n    <MainLayoutWrapper>\n      <MainLayoutContainer>\n        <MainLayoutContent>\n          <Outlet />\n        </MainLayoutContent>\n      </MainLayoutContainer>\n    </MainLayoutWrapper>\n  </MainLayoutRoot>\n);\n\nexport default MainLayout;\n","import moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport * as React from 'react';\nimport axios from 'axios';\n\n\nconst user = {\n  //avatar: '/static/images/avatars/avatar_6.png',\n  city: 'Addis Ababa',\n  country: 'country',\n  jobTitle: 'Admin',\n  name: 'Miki',\n  timezone: 'GTM-7'\n};\n\n\nconst AccountProfile = (props) => {\n\n\n\n\n\n  const [userimage, setUSerimage] = React.useState({\n    avatar: '/static/images/avatars/avatar_6.png'\n  })\n\n  const [state, setState] = React.useState({\n    mainState: \"initial\",\n    selectedFile: null\n  });\n\n  const handleUploadClick = event => {\n\n   \n    \n\n    setState({\n      mainState: \"uploaded\",\n      selectedFile: event.target.files[0],\n    });\n   \n    \n\n    \n\n  };\n\n\n  const handleSaveImage = ()=>{\n    setUSerimage({avatar:URL.createObjectURL(state.selectedFile)})\n    const formData = new FormData();\n\n    formData.append(\n      \"image\",\n      \"state.selectedFile\",\n    );\n    // formData.append(\n    //   \"first_name\",\n    //   state.selectedFile,\n    // );\n    // formData.append(\n    //   \"second_name\",\n    //   state.selectedFile,\n    // );\n\n    // formData.append(\n    //   \"email\",\n    //   state.selectedFile,\n    // );\n\n  \n\n    console.log(formData.values());\n    axios.put(\"http://localhost:1337/users/1\", formData).then((res)=>{\n      console.log(res)\n    }).catch((err)=>{\n      console.log(err)\n    })\n    \n  }\n\n\n  return (\n    <Card {...props}>\n      <CardContent>\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            flexDirection: 'column'\n          }}\n        >\n          <Avatar\n            src={userimage.avatar}\n            sx={{\n              height: 100,\n              width: 100\n            }}\n          />\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {user.name}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {`${user.city} ${user.country}`}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\n          </Typography>\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActions>\n\n\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <input\n            style={{ display: 'none' }}\n            accept=\"image/*\"\n            id=\"contained-button-file\"\n            multiple\n            type=\"file\"\n            onChange={handleUploadClick}\n          />\n          <label htmlFor=\"contained-button-file\">\n            <Button\n              component=\"span\"\n              color=\"primary\"\n              fullWidth\n              variant=\"text\"\n            >\n              Upload picture\n            </Button>\n\n\n          </label>\n\n          \n        </Grid>\n        <Button\n              onClick={ handleSaveImage}\n              color=\"primary\"\n              fullWidth\n              variant=\"text\"\n\n            >\n              Save\n            </Button>\n      </CardActions>\n    </Card>\n  );\n\n}\n\nexport default AccountProfile;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField\n} from '@material-ui/core';\n\nconst states = [\n  {\n    value: 'alabama',\n    label: 'Alabama'\n  },\n  {\n    value: 'new-york',\n    label: 'New York'\n  },\n  {\n    value: 'san-francisco',\n    label: 'San Francisco'\n  }\n];\n\nconst AccountProfileDetails = (props) => {\n  const [values, setValues] = useState({\n    firstName: 'Katarina',\n    lastName: 'Smith',\n    email: 'demo@devias.io',\n    phone: '',\n    state: 'Alabama',\n    country: 'USA'\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      {...props}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"number\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                name=\"state\"\n                onChange={handleChange}\n                required\n                select\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {states.map((option) => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save details\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nexport default AccountProfileDetails;\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid\n} from '@material-ui/core';\nimport AccountProfile from 'src/components/account/AccountProfile';\nimport AccountProfileDetails from 'src/components/account/AccountProfileDetails';\n\nconst Account = () => (\n  <>\n    <Helmet>\n      <title>Account | Quiz App</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xs={12}\n          >\n            <AccountProfile />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <AccountProfileDetails />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default Account;\n","import {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    CircularProgress,\n    DialogActions\n} from \"@material-ui/core\";\nconst LoadingProgress = () => {\n\n    return(\n        <Dialog\n                open={true}\n                keepMounted\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle>Loading</DialogTitle>\n                <DialogContent>\n\n                    <CircularProgress />\n                </DialogContent>\n                <DialogActions>\n                </DialogActions>\n            </Dialog>\n    );\n}\n\nexport default  LoadingProgress;","import * as React from 'react';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid, TextField, DialogTitle, Dialog, MenuItem\n} from '@material-ui/core';\nimport axios from 'axios';\nimport { getToken } from 'src/helper/helpers';\nimport LoadingProgress from 'src/components/alertdialog/LoadingProgress';\n\n\n\nexport default function CustomersDialog(props) {\n  const Services = [\n    {\n      value: 1,\n      label: 'Silver',\n    },\n    {\n      value: 2,\n      label: 'Golden',\n    },\n  ];\n\n\n  const { country, category, incrementCounter, onClose, open, product } = props;\n  const [alertopen, setAlertOpen] = React.useState(false);\n\n  const handleClickAlertOpen = () => {\n    setAlertOpen(true);\n  };\n  const handleAlertClose = () => {\n    setAlertOpen(false);\n  };\n\n  const [service, setService] = React.useState(\"\");\n\n  const handleChanges = (event) => {\n    setService(event.target.value);\n  };\n  const [cats, setCategory] = React.useState('');\n  const handleCategoryChange = (event) => {\n    setCategory(event.target.value);\n  }\n  const [location, setLocation] = React.useState('');\n    const handleLocationChange = (event) => {\n        setLocation(event.target.value);\n    }\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      {alertopen && (<LoadingProgress />)}\n\n      <Dialog onClose={onClose} open={open}>\n        <DialogTitle>Update Customer Profile</DialogTitle>\n        <Formik\n          initialValues={{\n            email: product != null ? product.email : '',\n            firstname: product != null ? product.firstName : '',\n            lastname: product != null ? product.lastName : '',\n            voucher: product != null ? product.voucher : '',\n            id: product != null ? product.id : '',\n          }}\n          validationSchema={Yup.object().shape({\n            email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n            firstname: Yup.string().max(255).required('First Name is required'),\n            lastname: Yup.string().max(255).required('Last Name is required'),\n          })}\n          onSubmit={values => {\n            console.log(\"testttttt\");\n\n            handleClickAlertOpen();\n            const firstname = values.firstname;\n            const lastname = values.lastname;\n            const email = values.email;\n            const voucher = values.voucher\n\n\n            console.log(\"testttttt\");\n\n            if (product != null) {\n              //console.log(\"testttttt\");\n\n\n              axios.put(`${process.env.REACT_APP_BASE_URL}/customers/${product.id}`, {\n                firstName: firstname,\n                lastName: lastname,\n                email: email,\n                voucher: voucher,\n                service: { id: service }\n              }, {\n                headers: {\n                  authorization: `Bearer ${getToken()}`\n                }\n              }).then((res) => {\n                handleAlertClose()\n                onClose();\n                incrementCounter();\n                console.log(res);\n              }).catch((err) => {\n                console.log(err);\n              })\n\n            }\n\n          }\n          }\n\n        >\n\n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            touched,\n            values\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <Card>\n                <CardHeader\n                  subheader=\"The information can be edited\"\n                  title=\"Profile\"\n                />\n                <Divider />\n                <CardContent>\n                  <Grid\n                    container\n                    spacing={3}\n                  >\n\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.firstname && errors.firstname)}\n                        fullWidth\n                        helperText={touched.firstname && errors.firstname}\n                        label=\"First Name\"\n                        margin=\"normal\"\n                        name=\"firstname\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"text\"\n                        value={values.firstname}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.lastname && errors.lastname)}\n                        fullWidth\n                        helperText={touched.lastname && errors.lastname}\n                        label=\"Last Name\"\n                        margin=\"normal\"\n                        name=\"lastname\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"text\"\n                        value={values.lastname}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.email && errors.email)}\n                        fullWidth\n                        helperText={touched.email && errors.email}\n                        label=\"Email Address\"\n                        margin=\"normal\"\n                        name=\"email\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"email\"\n                        value={values.email}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.voucher && errors.voucher)}\n                        fullWidth\n                        helperText={touched.voucher && errors.voucher}\n                        label=\"Voucher\"\n                        margin=\"normal\"\n                        name=\"voucher\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"text\"\n                        value={values.voucher}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        id=\"outlined-select-service\"\n                        select\n                        label=\"Country\"\n                        name='country'\n                        value={location}\n                        onChange={handleLocationChange}\n                        helperText=\"Please select Your Location\"\n                        required\n                      >\n                        {country.map((option) => (\n                          <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n\n\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n\n                        id=\"outlined-select-category\"\n                        select\n                        label=\"Service\"\n                        value={service}\n                        onChange={handleChanges}\n                        helperText=\"Please select Service\"\n                        required\n                      >\n                        {Services.map((option) => (\n                          <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        id=\"outlined-select-category\"\n                        select\n                        label=\"Category\"\n                        value={cats}\n                        onChange={handleCategoryChange}\n                        helperText=\"Please select Category\"\n                        required\n                      >\n                        {category.map((option) => (\n                          <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n\n                    </Grid>\n                  </Grid>\n                </CardContent>\n                <Divider />\n                <Box\n                  sx={{\n                    display: 'flex',\n                    justifyContent: 'flex-end',\n                    p: 2\n                  }}\n                >\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    type=\"submit\"\n\n\n                  >\n                    Update\n          </Button>\n\n                </Box>\n              </Card>\n            </form>\n          )}\n        </Formik>\n\n\n\n\n      </Dialog>\n    </Box>\n  )\n}","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Button,\n} from '@material-ui/core';\nimport * as React from 'react';\nimport axios from 'axios';\nimport {getToken} from 'src/helper/helpers';\nimport LoadingProgress from 'src/components/alertdialog/LoadingProgress';\n\n\n\nexport default function DeleteAlert({handleSnackOpen,incrementCounter, open, handleClose, id,endpoint, ...rest}) {\n    const [success,setSuccess] = React.useState(false);\n    console.log(id)\n\n    const handleDelete = (id) => {\n        setSuccess(true);\n        \n        \n        const response = id.map(i=>{\n            \n            return axios.delete(`${process.env.REACT_APP_BASE_URL}/${endpoint}/${i}`, {\n                        headers: {\n                            authorization: `Bearer ${getToken()}`\n                        }\n                    }).then((res) => {\n                        if (res.status === 200) {\n                            //console.log(res)\n                            //navigate(0);\n                            \n            \n                            \n            \n                            \n                            \n                            \n                        }\n                        console.log(res)\n                    }).catch((err)=>{\n                        console.log(err);\n                    });\n\n            \n            \n\n        })\n\n        return Promise.all(response).then(() => {\n            incrementCounter();\n            setSuccess(false);\n            handleSnackOpen();\n            handleClose();\n          });\n        \n\n      \n\n    }\n\n\n    return (\n        <Dialog\n            open={open}\n            keepMounted\n            onClose={handleClose}\n            aria-describedby=\"alert-dialog-slide-description\"\n        >\n            {success && (<LoadingProgress />)}\n            <DialogTitle>{\"Warning\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    \n                    You can't undo once you delete it.\n                    Are You sure you want to delete the selected resource?\n          </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>No</Button>\n                <Button onClick={()=>handleDelete(id)}>Yes</Button>\n            </DialogActions>\n        </Dialog>\n\n    );\n\n}\n","import {\n    Snackbar\n} from \"@material-ui/core\";\nimport MuiAlert from '@mui/material/Alert';\nimport * as React from 'react';\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n  });\n\n\n  \nconst SuccessSnackBar = () => {\n    const [open, setOpen] = React.useState(true);\n\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpen(false);\n      };\n\n    return(\n        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\" sx={{ width: '20%' }}>\n          Operation Successfull!\n        </Alert>\n      </Snackbar>\n    );\n}\n\nexport default  SuccessSnackBar;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  IconButton,\n  Grid\n  \n} from '@material-ui/core';\nimport * as React from 'react';\nimport CustomersDialog from './CustomersDialog';\nimport getInitials from 'src/utils/getInitials';\nimport DeleteAlert from 'src/components/alertdialog/DeleteAlert';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SuccessSnackBar from 'src/components/snackbar/SuccessSnackBar';\n\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\n\nconst CustomerListResults = ({country, incrementCounter,category, customers, ...rest }) => {\n  const [id,setId] = React.useState(0);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [alertopen, setAlertOpen] = React.useState(false);\n \n  const handleClickAlertOpen = () => {\n    setAlertOpen(true);\n  };\n  const handleAlertClose = () => {\n    setAlertOpen(false);\n  };\n\n  const [snackopen, setSnackOpen] = useState(false);\n  const handleSnackOpen = () => {\n    setSnackOpen(true);\n};\n\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const [prod,setProduct] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = (prod) => {\n    setProduct(prod);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n;\n  };\n  const handleSelectAll = (event) => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\n      setIsDisabled(false);\n\n    } else {\n      newSelectedCustomerIds = [];\n      setIsDisabled(true);\n\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n      setId(id);\n      setIsDisabled(false);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n      setIsDisabled(true);\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(0, selectedIndex),\n        selectedCustomerIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n\n  return (\n    <Card {...rest}>\n       <CustomersDialog\n      onClose={handleClose}\n      open={open}\n      product={prod}\n      country={country}\n      category={category}\n      incrementCounter={incrementCounter}\n    />\n    {alertopen && (<DeleteAlert id={selectedCustomerIds} open={alertopen} handleSnackOpen={handleSnackOpen} handleClose={handleAlertClose} incrementCounter={incrementCounter} endpoint=\"customers\" />)}\n    {snackopen && (<SuccessSnackBar />)}\n\n    <Grid container justifyContent=\"right\">\n    <IconButton color=\"primary\" disabled={selectedCustomerIds.length!==0?false:true} onClick={handleClickAlertOpen} \n    >\n          <DeleteIcon />\n    </IconButton>\n    </Grid>\n      \n\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table\n            \n          >\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedCustomerIds.length === customers.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedCustomerIds.length > 0\n                      && selectedCustomerIds.length < customers.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Email\n                </TableCell>     \n                <TableCell>\n                  Voucher\n                </TableCell>\n                <TableCell>\n                  Service\n                </TableCell>\n                <TableCell>\n                  Result\n                </TableCell>\n                <TableCell>\n                  Country\n                </TableCell>\n                <TableCell>\n                  Registration date\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            \n            <TableBody>\n              {customers.slice(page * limit, page * limit + limit).map((customer) => (\n\n                <TableRow\n                  hover\n                  key={customer.id}\n                  selected={selectedCustomerIds.indexOf(customer.id) !== -1}\n                  //onClick={()=>handleClickOpen(customer)}\n                >\n                  \n                  <TableCell padding=\"checkbox\">\n                  <Checkbox\n                      checked={selectedCustomerIds.indexOf(customer.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, customer.id)}\n                      value=\"true\"\n                    />\n                    \n                  </TableCell>\n                  <TableCell\n                  onClick={()=>handleClickOpen(customer)}\n                  >\n                    <Box\n                      sx={{\n                        alignItems: 'center',\n                        display: 'flex'\n                      }}\n                    >\n                      <Avatar\n                        src={customer.avatarUrl}\n                        sx={{ mr: 2 }}\n                      >\n                        {getInitials(customer.firstName)}\n\n                      </Avatar>\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {customer.firstName+\" \"+customer.lastName}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {customer.email}\n                  </TableCell>\n                  <TableCell>\n                  {customer.voucher}\n                  </TableCell>\n                  <TableCell>\n                  {customer.service.name}\n                  </TableCell>\n                  <TableCell>\n                  {customer.examResult}\n                  </TableCell>\n                  <TableCell>\n                  {customer.location.name}\n                  </TableCell>\n                  <TableCell>\n                  {moment(customer.published_at).format('DD/MM/YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n\n              \n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={customers.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n      \n     \n    </Card>\n    \n  );\n};\n\nCustomerListResults.propTypes = {\n  customers: PropTypes.array.isRequired\n};\n\nexport default CustomerListResults;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  Dialog,\n  Divider,\n  Grid,\n  DialogTitle,\n  CardHeader,\n\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nimport CustomersDialog from './CustomersDialog';\nimport * as React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst CustomerListToolbar = (prop) => {\n\n  const navigate = useNavigate();\n\n\n\n  const states = [\n    {\n      value: 'Pending',\n      label: 'Pending'\n    },\n    {\n      value: 'Approved',\n      label: 'Approved'\n    },\n    {\n      value: 'Rejected',\n      label: 'Rejected'\n    }\n  ];\n\n\n  const [open, setOpen] = React.useState(false);\n  //const [selectedvalue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = (prod) => {\n    navigate('/app/customers/create');\n\n    //setProduct(prod);\n    //setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    //setSelectedValue(value);\n  };\n\n  return(\n  <Box prop>\n    \n    \n    \n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end'\n      }}\n    >\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={()=>{handleClickOpen()}}\n      >\n        Add customer\n      </Button>\n    </Box>\n    <Box sx={{ mt: 3 }}>\n      <Card>\n        <CardContent>\n          <Box sx={{ maxWidth: 500 }}>\n            <TextField\n              fullWidth\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SvgIcon\n                      fontSize=\"small\"\n                      color=\"action\"\n                    >\n                      <SearchIcon />\n                    </SvgIcon>\n                  </InputAdornment>\n                )\n              }}\n              placeholder=\"Search customer\"\n              variant=\"outlined\"\n            />\n          </Box>\n        </CardContent>\n      </Card>\n    </Box>\n  </Box>\n);\n}\n\nexport default CustomerListToolbar;\n","import { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router-dom';\nimport { Box, Container } from '@material-ui/core';\nimport CustomerListResults from 'src/components/customer/CustomerListResults';\nimport CustomerListToolbar from 'src/components/customer/CustomerListToolbar';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getToken } from 'src/helper/helpers';\nimport SuccessSnackBar from 'src/components/snackbar/SuccessSnackBar';\n\nconst CustomerList = () => {\n  const location = useLocation();\n  const [snackopen, setSnackOpen] = useState(false);\n\n\n  const [examcat, setexamcat] = useState({\n    response: [],\n\n  })\n  const [country, setCountry] = useState({\n    response: [],\n\n  })\n\n  const handleSnackOpen = () => {\n    setSnackOpen(true);\n  };\n\n\n\n\n  const [state, setState] = useState({\n    response: [],\n  })\n\n\n  const [counter, updateCounter] = useState(0);\n  const incrementCounter = () => {\n    updateCounter(counter + 1);\n  }\n\n\n  useEffect(() => {\n    // location.state!=null?handleSnackOpen(true):console.log(\"false\")\n    axios.get(`${process.env.REACT_APP_BASE_URL}/customers`,\n      {\n        headers: {\n          authorization: `Bearer ${getToken()}`\n        }\n      }\n    ).then((res) => {\n      setState({ ...state, ['response']: res.data })\n    })\n    axios.get(`${process.env.REACT_APP_BASE_URL}/categories`,\n      {\n        headers: {\n          authorization: `Bearer ${getToken()}`\n        }\n      }\n    ).then((res) => {\n      const categories = []\n      res.data.map((data) => {\n        const entry = {\n          value: data.id,\n          label: data.name\n        }\n        categories.push(entry);\n      });\n      setexamcat({ ...examcat, ['response']: categories })\n      \n\n      // console.log(`dsfasfdasdf${categories[0].label}`)\n    })\n    axios.get(`${process.env.REACT_APP_BASE_URL}/locations`,\n      {\n        headers: {\n          authorization: `Bearer ${getToken()}`\n        }\n      }\n    ).then((res) => {\n      const locations = []\n      res.data.map((data) => {\n        const entry = {\n          value: data.id,\n          label: data.name\n        }\n        locations.push(entry);\n      });\n      setCountry({ ...country, ['response']: locations })\n      \n\n      // console.log(`dsfasfdasdf${categories[0].label}`)\n    })\n  }, [counter])\n\n\n\n\n  return (\n    <>\n      <Helmet>\n\n        <title>Customers | Quiz App</title>\n      </Helmet>\n      {snackopen && (<SuccessSnackBar />)}\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <CustomerListToolbar />\n          <Box sx={{ pt: 3 }}>\n            <CustomerListResults country={country.response} incrementCounter={incrementCounter} customers={state.response} category={examcat.response} />\n          </Box>\n        </Container>\n      </Box>\n    </>);\n}\n\nexport default CustomerList;\n","import * as React from 'react';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid, TextField, DialogTitle, Dialog\n} from '@material-ui/core';\nimport { getToken } from 'src/helper/helpers';\nimport axios from 'axios';\nimport LoadingProgress from 'src/components/alertdialog/LoadingProgress';\n\n\n\nexport default function AdminDialog(props) {\n\n\n  const { incrementCounter, onClose, open, users } = props;\n\n  const [alertopen, setAlertOpen] = React.useState(false);\n\n  const handleClickAlertOpen = () => {\n    setAlertOpen(true);\n  };\n  const handleAlertClose = () => {\n    setAlertOpen(false);\n  };\n\n\n\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n\n      {alertopen && (<LoadingProgress />)}\n\n      <Dialog onClose={onClose} open={open}>\n        <DialogTitle>Set backup account</DialogTitle>\n        <Formik\n          initialValues={{\n\n            firstname: users != null ? users.first_name : '',\n            lastname: users != null ? users.last_name : '',\n            username: users != null ? users.username : '',\n            email: users != null ? users.email : '',\n            password: '',\n\n          }}\n          validationSchema={Yup.object().shape({\n            email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n            firstname: Yup.string().max(255).required('First Name is required'),\n            lastname: Yup.string().max(255).required('Last Name is required'),\n            username: Yup.string().max(255).required('User Name is required'),\n            password: Yup.string().max(255).required('Password is required'),\n          })}\n          onSubmit={values => {\n\n            handleClickAlertOpen();\n            const data = {\n              username: values.username,\n              first_name: values.firstname,\n              last_name: values.lastname,\n              email: values.email,\n              password: values.password,\n            }\n            if (users != null) {\n              axios.put(`${process.env.REACT_APP_BASE_URL}/users/${users.id}`, data, {\n                headers: {\n                  authorization: `Bearer ${getToken()}`\n                }\n              }\n              )\n                .then((res) => {\n                  if (res.status === 200) {\n                    // incrementCounter();\n                    handleAlertClose();\n                    onClose();\n                    incrementCounter();\n                    console.log(res);\n                  }\n\n                })\n                .catch((err) => {\n                  handleAlertClose();\n                  onClose();\n                  console.log(err);\n\n                })\n\n            } else {\n\n              axios.post(`${process.env.REACT_APP_BASE_URL}/users`, data, {\n                headers: {\n                  authorization: `Bearer ${getToken()}`\n                }\n              }\n              )\n                .then((res) => {\n                  handleAlertClose();\n                  onClose();\n                  incrementCounter();\n                  console.log(res);\n           \n\n                })\n                .catch((err) => {\n                  handleAlertClose();\n                  onClose();\n                  console.log(err)\n\n                })\n            }\n          }\n          }\n\n        >\n\n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            touched,\n            values\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <Card>\n                <CardHeader\n                  subheader=\"The information can be edited\"\n                  title=\"Profile\"\n                />\n                <Divider />\n                <CardContent>\n                  <Grid\n                    container\n                    spacing={3}\n                  >\n\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.firstname && errors.firstname)}\n                        fullWidth\n                        helperText={touched.firstname && errors.firstname}\n                        label=\"First Name\"\n                        margin=\"normal\"\n                        name=\"firstname\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"text\"\n                        value={values.firstname}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.lastname && errors.lastname)}\n                        fullWidth\n                        helperText={touched.lastname && errors.lastname}\n                        label=\"Last Name\"\n                        margin=\"normal\"\n                        name=\"lastname\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"text\"\n                        value={values.lastname}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.username && errors.username)}\n                        fullWidth\n                        helperText={touched.username && errors.username}\n                        label=\"User Name\"\n                        margin=\"normal\"\n                        name=\"username\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"text\"\n                        value={values.username}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.email && errors.email)}\n                        fullWidth\n                        helperText={touched.email && errors.email}\n                        label=\"Email Name\"\n                        margin=\"normal\"\n                        name=\"email\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"email\"\n                        value={values.email}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.password && errors.password)}\n                        fullWidth\n                        helperText={touched.password && errors.password}\n                        label=\"Password\"\n                        margin=\"normal\"\n                        name=\"password\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.password}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n\n\n                  </Grid>\n                </CardContent>\n                <Divider />\n                <Box\n                  sx={{\n                    display: 'flex',\n                    justifyContent: 'flex-end',\n                    p: 2\n                  }}\n                >\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    type=\"submit\"\n\n\n                  >\n                    Save\n          </Button>\n\n                </Box>\n              </Card>\n            </form>\n          )}\n        </Formik>\n      </Dialog>\n    </Box>\n  )\n}\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  Grid,\n  IconButton\n \n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\nimport * as React from 'react';\nimport AdminDialog from './AdminDialog';\nimport DeleteAlert from 'src/components/alertdialog/DeleteAlert';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SuccessSnackBar from 'src/components/snackbar/SuccessSnackBar';\n\nconst AdminListResults = ({incrementCounter, admins, ...rest }) => {\n  const [selectedUserIds, setSelectedUserIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const [admin,setAdmin] = useState([]);\n  const [id,setId] = React.useState(0);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [alertopen, setAlertOpen] = React.useState(false);\n  const [snackopen, setSnackOpen] = useState(false);\n  const [open, setOpen] = React.useState(false);\n\n \n  const handleClickAlertOpen = () => {\n    setAlertOpen(true);\n  };\n  const handleAlertClose = () => {\n    setAlertOpen(false);\n  };\n\n  const handleClickOpen = (admin) => {\n    setAdmin(admin);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    //setSelectedValue(value);\n  };\n\n  const handleSnackOpen = () => {\n    setSnackOpen(true);\n};\n\n  const handleSelectAll = (event) => {\n    let newSelectedUserIds;\n\n    if (event.target.checked) {\n      newSelectedUserIds = admins.map((user) => user.id);\n      setIsDisabled(false);\n    } else {\n      newSelectedUserIds = [];\n      setIsDisabled(true);\n    }\n\n    setSelectedUserIds(newSelectedUserIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedUserIds.indexOf(id);\n    let newSelectedUserIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedUserIds = newSelectedUserIds.concat(selectedUserIds, id);\n      setId(id);\n      setIsDisabled(false);\n    } else if (selectedIndex === 0) {\n      newSelectedUserIds = newSelectedUserIds.concat(selectedUserIds.slice(1));\n      setIsDisabled(true);\n    } else if (selectedIndex === selectedUserIds.length - 1) {\n      newSelectedUserIds = newSelectedUserIds.concat(selectedUserIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedUserIds = newSelectedUserIds.concat(\n        selectedUserIds.slice(0, selectedIndex),\n        selectedUserIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedUserIds(newSelectedUserIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card {...rest}>\n\n      <AdminDialog\n      \n      onClose={handleClose}\n      open={open}\n      users={admin}\n      incrementCounter={incrementCounter}\n      \n    />\n    {alertopen && (<DeleteAlert id={selectedUserIds} incrementCounter={incrementCounter} handleSnackOpen={handleSnackOpen} open={alertopen} handleClose={handleAlertClose} endpoint=\"users\" />)}\n    {snackopen && (<SuccessSnackBar />)}\n\n    <Grid container justifyContent=\"right\">\n    <IconButton color=\"primary\" disabled={selectedUserIds.length!==0?false:true} onClick={handleClickAlertOpen} \n    >\n          <DeleteIcon />\n    </IconButton>\n    </Grid>\n      \n\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table\n            \n          >\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedUserIds.length === admins.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedUserIds.length > 0\n                      && selectedUserIds.length < admins.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  User Name\n                </TableCell>\n                <TableCell>\n                  Email\n                </TableCell>\n                <TableCell>\n                  Registration date\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            \n            <TableBody>\n              {admins.slice(page * limit, page * limit + limit).map((admin) => (\n                <TableRow\n                  hover\n                  key={admin.id}\n                  selected={selectedUserIds.indexOf(admin.id) !== -1}\n                  onClick={()=>handleClickOpen(admin)}\n                >\n                  \n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedUserIds.indexOf(admin.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, admin.id)}\n                      value=\"true\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      sx={{\n                        alignItems: 'center',\n                        display: 'flex'\n                      }}\n                    >\n                      <Avatar\n                        src={admin.avatarUrl}\n                        sx={{ mr: 2 }}\n                        onClick={()=>handleClickOpen(admin)}\n\n                      >\n                        {getInitials(admin.first_name)}\n\n                      </Avatar>\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {`${admin.first_name} ${admin.last_name}`}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {admin.username}\n                  </TableCell>\n                  \n\n                  <TableCell>\n                    {admin.email}\n                  </TableCell>\n                  <TableCell>\n                    {moment(admin.updated_at).format('DD/MM/YYYY')}\n                  </TableCell>\n                \n                </TableRow>\n                \n              ))}\n\n              \n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={admins.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n      \n     \n    </Card>\n    \n  );\n};\n\nAdminListResults.propTypes = {\n  admins: PropTypes.array.isRequired\n};\n\nexport default AdminListResults;\n","import {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    TextField,\n    InputAdornment,\n    SvgIcon,\n  } from '@material-ui/core';\n  import { Search as SearchIcon } from 'react-feather';\n  import AdminDialog from './AdminDialog';\n  import * as React from 'react';\n  \n  const AdminListToolbar = ({incrementCounter, ...rest}) => {\n  \n    const [open, setOpen] = React.useState(false);\n  \n \n    const handleClose = () => {\n      setOpen(false);\n    };\n  \n    return(\n    <Box {...rest}>\n      <AdminDialog\n        onClose={handleClose}\n        open={open}\n        product={null}\n      />\n      \n      \n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end'\n        }}\n      >\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={()=>{setOpen(true)}}\n        >\n          Add Admin\n        </Button>\n      </Box>\n      <Box sx={{ mt: 3 }}>\n        <Card>\n          <CardContent>\n            <Box sx={{ maxWidth: 500 }}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Search customer\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n  }\n  \n  export default AdminListToolbar;\n  ","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport AdminListResults from 'src/components/admin/AdminListResults';\nimport AdminListToolbar from 'src/components/admin/AdminListToolbar';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {getToken} from 'src/helper/helpers';\n\nconst AdminList = () => {\n  \n  const [state,setState] = useState({\n    response:[],\n  })\n\n  const [counter, updateCounter] = useState(0);\n  const incrementCounter = () => {\n    updateCounter(counter + 1);\n}\n  useEffect(() => {\n    \n      \n       axios.get(`${process.env.REACT_APP_BASE_URL}/users`,{\n         headers:{\n           authorization: `Bearer ${getToken()}`\n         }\n       }).then((res)=>{\n         //console.log(res.data)\n        //state.setState({response: [\"res.data\"]});? admin.username :\n        setState({...state , ['response']: res.data})\n\n       })\n      \n      //console.log(\"test\")\n     \n     //console.log(state.response)\n  }, [counter])\n\n  console.log(state.response)\n\n \n  \n  return(\n  <>\n    <Helmet>\n      \n      <title>Admins | Quiz App</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <AdminListToolbar />\n        <Box sx={{ pt: 3 }}>\n          <AdminListResults incrementCounter={incrementCounter} admins={state.response} />\n        </Box>\n      </Container>\n    </Box>\n  </>);\n}\n\nexport default AdminList;\n","import moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Chip,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { useNavigate } from 'react-router-dom';\n\n\n\nconst LatestOrders = ({ customers }) => {\n  const navigate = useNavigate();\n  const nav = ()=>{\n    navigate('/app/customers')\n  }\n  return (\n\n    <Card >\n      <CardHeader title=\"Customers\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 800 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Name\n              </TableCell>\n                <TableCell>\n                  Email\n              </TableCell>\n                <TableCell>\n                Created At\n              </TableCell>\n                <TableCell>\n                  Service\n              </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {customers.map((customer) => (\n                <TableRow\n                  hover\n                  key={customer.id}\n                >\n                  <TableCell>\n                    {`${customer.firstName} ${customer.lastName}`}\n                  </TableCell>\n                  <TableCell>\n                    {customer.email}\n                  </TableCell>\n                  <TableCell>\n                    {moment(customer.published_at).format('DD/MM/YYYY')}\n                  </TableCell>\n                  <TableCell>\n                    {customer.service.name}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        }}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n          onClick={nav}\n        >\n          View all\n      </Button>\n      </Box>\n    </Card>\n  );\n}\nexport default LatestOrders;\n","import {\n  Avatar,\n  Box,\n  IconButton,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  TextField,\n  MenuItem\n} from '@material-ui/core';\nimport * as React from 'react';\nimport { orange } from '@material-ui/core/colors';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport UploadFile from '@material-ui/icons/UploadFile';\nimport { getToken } from 'src/helper/helpers';\nimport axios from 'axios';\nimport LoadingProgress from 'src/components/alertdialog/LoadingProgress';\n\n\nconst TotalCustomers = ({ category, ...rest }) => {\n  const [progressopen,setProgressOpen] = React.useState(false);\n  const [alertopen, setAlertOpen] = React.useState(false);\n  const [cats, setCategory] = React.useState('');\n  const [title,setTitle] = React.useState('');\n  const handleTitleChange = (event)=>{\n    setTitle(event.target.value)\n  }\n  const [document, setDocument] = React.useState({\n    pdf: null\n  })\n\n\n  const handleProgressOpen = () => {\n    setProgressOpen(true);\n  };\n  const handleProgressClose = () => {\n    setProgressOpen(false);\n  };\n\n  const handleUploadClick = event => {\n    var file = event.target.files[0];\n    setDocument({\n      pdf: event.target.files[0]\n    })\n  };\n\n  const handleChanges = (event) => {\n    setCategory(event.target.value);\n  };\n  const handleClickAlertOpen = () => {\n    setAlertOpen(true);\n  };\n  const handleAlertClose = () => {\n    setAlertOpen(false);\n  };\n\n  const handleFileUpload = () => {\n    handleProgressOpen();\n    const formData = new FormData();\n    axios.post(`${process.env.REACT_APP_BASE_URL}/exam-resources`, { title: title, category: { id: cats } }, {\n      headers: {\n        authorization: `Bearer ${getToken()}`\n      }\n    }).then((res) => {\n      formData.append('files', document.pdf)\n      formData.append('field', 'file');\n      formData.append('ref', 'exam-resource');\n      formData.append('refId', res.data.id)\n      axios.post(`${process.env.REACT_APP_BASE_URL}/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          authorization: `Bearer ${getToken()}`\n        }\n      }).then((res) => {\n\n        if (res.status == 200) {\n          setDocument({\n            pdf: null\n          })\n          handleProgressClose();\n          handleAlertClose();\n        }\n        console.log(res);\n\n      }).catch((err) => {\n        console.log(err);\n      })\n    }).catch((err) => {\n      console.log(err);\n    })\n\n\n  }\n  \n\n  return (\n    <Card >\n            {progressopen && (<LoadingProgress />)}\n\n      <Dialog\n        open={alertopen}\n        keepMounted\n        onClose={handleAlertClose}\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle>Upload</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Fill The Form\n          </DialogContentText>\n          <Box\n            noValidate\n            component=\"form\"\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              m: 'auto',\n              width: 'fit-content',\n            }}\n          >\n             <TextField\n                        fullWidth\n                        label=\"Title\"\n                        margin=\"normal\"\n                        name=\"title\"\n                        onChange={handleTitleChange}\n                        type=\"email\"\n                        value={title}\n                        variant=\"standard\"\n                      />\n\n            <input\n              style={{ display: 'none' }}\n              accept=\".pdf\"\n              id=\"contained-button-file2\"\n              multiple\n              type=\"file\"\n              onChange={handleUploadClick}\n            />\n            <label htmlFor=\"contained-button-file2\">\n              <Button\n                component=\"span\"\n                color=\"primary\"\n                fullWidth\n                variant=\"text\"\n                onChange={handleUploadClick}\n\n              >\n                Upload PDF\n            </Button>\n\n\n            </label>\n            <TextField\n              id=\"outlined-select-currency\"\n              select\n              label=\"Select\"\n              value={cats}\n              onChange={handleChanges}\n              helperText=\"Please select your currency\"\n              required\n            >\n              {category.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleFileUpload}>Upload</Button>\n        </DialogActions>\n      </Dialog>\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'center' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              Upload Downlodable Resources\n          </Typography>\n            \n          </Grid>\n          <Grid item>\n            <IconButton onClick={handleClickAlertOpen}>\n              <Avatar\n                sx={{\n                  backgroundColor: orange[600],\n                  height: 40,\n                  width: 40\n                }}\n              >\n                <UploadFile />\n              </Avatar>\n            </IconButton>\n          </Grid>\n        </Grid>\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            pt: 2\n          }}\n        >\n          <ArrowUpwardIcon sx={{ color: orange[900] }} />\n          \n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            Click here to Upload Downlodable Resources\n        </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\nexport default TotalCustomers;\n","import {\n    Avatar,\n    Box,\n    Card,\n    CardContent,\n    Grid,\n    Typography,\n    TextField,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions, Switch, styled,FormGroup,FormControlLabel\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nimport { green } from '@material-ui/core/colors';\n\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\nimport MobileDateTimePicker from '@mui/lab/MobileDateTimePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport * as React from 'react';\nimport CalendarToday from '@material-ui/icons/CalendarToday';\nimport axios from 'axios';\nimport { getToken } from 'src/helper/helpers';\nimport moment from 'moment';\n\n\nconst Android12Switch = styled(Switch)(({ theme }) => ({\n    padding: 8,\n    '& .MuiSwitch-track': {\n        borderRadius: 22 / 2,\n        '&:before, &:after': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '50%',\n            transform: 'translateY(-50%)',\n            width: 16,\n            height: 16,\n        },\n        '&:before': {\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\n                theme.palette.getContrastText(theme.palette.primary.main),\n            )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\n            left: 12,\n        },\n        '&:after': {\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\n                theme.palette.getContrastText(theme.palette.primary.main),\n            )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\n            right: 12,\n        },\n    },\n    '& .MuiSwitch-thumb': {\n        boxShadow: 'none',\n        width: 16,\n        height: 16,\n        margin: 2,\n    },\n}));\n\n\n\nconst DatePicker = (props) => {\n    const [checked,setChecked]=React.useState(false);\n    const handleChecked = (event)=>{\n        setChecked(event.target.checked);\n        \n        axios.put(`${process.env.REACT_APP_BASE_URL}/exam-dates/1`,\n                { startExam: !checked },\n                {\n                    headers: {\n                        authorization: `Bearer ${getToken()}`\n                    }\n                }).then((res) => {\n                    if (res.status == 200) {\n                        //console.log(res)\n                        console.log(res)\n                    }\n                })\n\n    }\n   \n    const [value, setValue] = React.useState(new Date(moment().format(\"DD-MM-YYYY hh:mm:ss\")));\n    const [alertopen, setAlertOpen] = React.useState(false);\n\n    const handleClickAlertOpen = () => {\n        setAlertOpen(true);\n    };\n    const handleAlertClose = () => {\n        setAlertOpen(false);\n    };\n    const handleClick = () => {\n        axios.put(`${process.env.REACT_APP_BASE_URL}/exam-dates/1`,\n            { exactTimeAndDate: value },\n            {\n                headers: {\n                    authorization: `Bearer ${getToken()}`\n                }\n            }).then((res) => {\n                if (res.status == 200) {\n                    handleClickAlertOpen();\n                    //console.log(res)\n                }\n                console.log(res)\n            })\n        console.log(value)\n    }\n    return (\n        <Card {...props}>\n            <Dialog\n                open={alertopen}\n                keepMounted\n                onClose={handleAlertClose}\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle>Success</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Date Updated Successfully.\n          </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleAlertClose}>Okay</Button>\n                </DialogActions>\n            </Dialog>\n            <CardContent>\n                <Grid\n                    container\n                    spacing={3}\n                    sx={{ justifyContent: 'space-between' }}\n                >\n                    <Grid item>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h6\"\n                        >\n                            Exam Date\n                    </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Avatar\n                            sx={{\n                                backgroundColor: red[600],\n                                height: 40,\n                                width: 40\n                            }}\n                        >\n                            <CalendarToday />\n\n                        </Avatar>\n                    </Grid>\n\n\n\n                    <Grid item>\n\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <MobileDateTimePicker\n                                value={value}\n                                onChange={(newValue) => {\n                                    setValue(newValue);\n                                }}\n                                label=\"Pick Date\"\n                                onError={console.log}\n                                minDate={new Date('2018-01-01T00:00')}\n                                inputFormat=\"yyyy/MM/dd hh:mm a\"\n                                mask=\"___/__/__ __:__ _M\"\n                                renderInput={(params) => <TextField {...params} />}\n                            />\n                        </LocalizationProvider>\n                        {/* <Android12Switch defaultChecked /> */}\n                        <FormGroup>\n                            <FormControlLabel\n                                control={<Android12Switch checked={checked} onChange={handleChecked} />}\n                                label=\"Start Exam\"\n                            />\n                        </FormGroup>\n\n                    </Grid>\n                    <Grid item  >\n                        <Box\n                            sx={{\n                                alignItems: 'center',\n                                display: 'flex',\n                                pt: 2\n                            }}\n                        >\n\n\n                            <Button\n                                color=\"textSecondary\"\n                                sx={{\n                                    color: red[900],\n                                    mr: 1\n                                }}\n                                variant=\"caption\"\n                                onClick={handleClick}\n                            >\n                                Set Date\n                            <ArrowUpwardIcon sx={{ color: red[900] }} />\n\n                            </Button>\n\n                        </Box>\n\n                    </Grid>\n\n                </Grid>\n\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default DatePicker;\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid\n} from '@material-ui/core';\nimport LatestOrders from 'src/components/dashboard//LatestOrders';\nimport TotalCustomers from 'src/components/dashboard//TotalCustomers';\nimport DatePicker from 'src/components/dashboard/DatePicker';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getToken } from 'src/helper/helpers';\n\n\n\nconst Dashboard = () => {\n  const [examcat, setexamcat] = useState({\n    response: [],\n\n  })\n  const [state, setState] = useState({\n    response: [],\n  })\n\n \n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_BASE_URL}/categories`,\n      {\n        headers: {\n          authorization: `Bearer ${getToken()}`\n        }\n      }\n    ).then((res) => {\n      const categories = []\n      res.data.map((data) => {\n        const entry = {\n          value: data.id,\n          label: data.name\n        }\n        categories.push(entry);\n      });\n      setexamcat({ ...examcat, ['response']: categories })\n    })\n\n    axios.get(`${process.env.REACT_APP_BASE_URL}/customers`,\n      {\n        headers: {\n          authorization: `Bearer ${getToken()}`\n        }\n      }\n    ).then((res) => {\n      setState({ ...state, ['response']: res.data })\n    })\n  }, [])\n\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard | Quiz App</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <Grid\n            container\n            spacing={3}\n            sx={{ justifyContent: 'space-between' }}\n\n          >\n            <Grid\n              item\n              lg={12}\n              md={12}\n              xl={9}\n              xs={12}\n            >\n              <LatestOrders customers={state.response.reverse().slice(0,7)} />\n            </Grid>\n\n            <Grid\n              item\n              lg={4}\n              sm={6}\n              xl={3}\n              xs={12}\n            >\n              <DatePicker />\n            </Grid>\n            <Grid\n              item\n              lg={3}\n              sm={6}\n              xl={3}\n              xs={12}\n            >\n              <TotalCustomers category={examcat.response} />\n            </Grid>\n\n          </Grid>\n        </Container>\n      </Box>\n    </>\n  );\n}\nexport default Dashboard;\n","import { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport {Formik} from 'formik';\nimport axios from 'axios';\nimport { Authenticate } from 'src/helper/helpers';\nimport {\n  Box,\n  Button,\n  Container,\n\n  Link,\n  TextField,\n  Typography,\n  Alert\n} from '@material-ui/core';\n\n\nconst Login = () => {\n  const navigate = useNavigate();\n\n\n  const [alert, setAlert] = useState(false);\n\n  return (\n    <>\n      <Helmet>\n        <title>Login | Quiz App</title>\n      </Helmet>\n      \n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        \n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              password: ''\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n              password: Yup.string().max(255).required('Password is required')\n            })}\n            onSubmit={(values,{setSubmitting} )=> {\n              const email = values.email;\n              const password = values.password;\n\n              axios.post(`${process.env.REACT_APP_BASE_URL}/auth/local`,{ identifier: email, password: password})\n              .then((res)=>{\n                Authenticate(res,()=>{\n                  navigate('/app/dashboard', { replace: true });\n                  \n                })\n              }).catch((err)=>{\n                setAlert(true);\n                setSubmitting(false);\n              })\n            }}\n           \n          >\n            \n            {({\n              \n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box sx={{ mb: 3 }}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Sign in\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Sign in on the internal platform\n                  </Typography>\n                </Box>\n                <Box\n                  sx={{\n                    pb: 1,\n                    pt: 3\n                  }}\n                >\n                  {alert ? <Alert severity=\"error\">Incorrect Username or Password!</Alert> : <></> }\n                </Box>\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n    \n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box sx={{ py: 2 }}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign in now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Don&apos;t have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/register\"\n                    variant=\"h6\"\n                  >\n                    Sign up\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Login;\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Typography\n} from '@material-ui/core';\n\nconst NotFound = () => (\n  <>\n    <Helmet>\n      <title>404 | Quiz App</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center'\n      }}\n    >\n      <Container maxWidth=\"md\">\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"h1\"\n        >\n          404: The page you are looking for isn’t here\n        </Typography>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"subtitle2\"\n        >\n          You either tried some shady route or you came here by mistake.\n          Whichever it is, try using the navigation\n        </Typography>\n        <Box sx={{ textAlign: 'center' }}>\n          <img\n            alt=\"Under development\"\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            style={{\n              marginTop: 50,\n              display: 'inline-block',\n              maxWidth: '100%',\n              width: 560\n            }}\n          />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { getToken } from 'src/helper/helpers';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  Dialog,\n  Slide,\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Container, Grid, Divider, CardHeader, MenuItem\n} from '@material-ui/core';\n\nimport axios from 'axios';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport LoadingProgress from 'src/components/alertdialog/LoadingProgress';\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Dialoog = (props) => {\n\n  const { incrementCounter, handleClose, open, product, category } = props;\n\n\n\n  let field = [];\n  let i = 0;\n  if (product != null) {\n\n    var f = product.choice.split('\\\\n');\n\n    for (i; i < f.length; i++) {\n      field.push({ choice: f[i] })\n    }\n  }\n\n  const [inputField, setInputeField] = React.useState(\n    product != null ? field : [\n      { choice: '' },\n      { choice: '' },\n      { choice: '' },\n      { choice: '' }\n    ]);\n\n\n  const addfield = () => {\n    setInputeField([...inputField, { choice: '' }])\n  }\n  const [cats, setCategory] = React.useState('');\n  const handleChanges = (event) => {\n    setCategory(event.target.value)\n  };\n\n  const handleChangeInput = (index, event) => {\n    const values = [...inputField];\n    values[index][event.target.name] = event.target.value;\n    setInputeField(values);\n\n  }\n\n  const [alertopen, setAlertOpen] = React.useState(false);\n\n  const handleClickAlertOpen = () => {\n    setAlertOpen(true);\n  };\n  const handleAlertClose = () => {\n    setAlertOpen(false);\n  };\n\n\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n    >\n    {alertopen && (<LoadingProgress />)}\n\n\n\n\n      <AppBar sx={{ position: 'relative' }}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\n\n          </Typography>\n          <Button autoFocus color=\"inherit\">\n            save\n            </Button>\n        </Toolbar>\n      </AppBar>\n\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n\n\n        <Formik\n          initialValues={{\n            question: product != null ? product.question : '',\n            answer: product != null ? product.answerIndex : '',\n            // inputfield: fixfield(),\n\n\n\n\n\n          }}\n          validationSchema={Yup.object().shape({\n            question: Yup.string().max(255).required('Question is required'),\n            answer: Yup.string().max(255).required('Answer index is required')\n          })}\n          onSubmit={values => {\n\n            handleClickAlertOpen();\n\n\n            let i = 0;\n            let q = '';\n            const n = \"\\\\n\";\n            for (i = 0; i <= inputField.length - 1; i++) {\n              i === 0 ? q += inputField[i].choice : q += n + inputField[i].choice;\n\n            }\n\n            const data = {\n              question: values.question,\n              choice: q,\n              answerIndex: values.answer,\n              category: { id: cats }\n\n            }\n\n            if (product!=null){\n              axios.put(`${process.env.REACT_APP_BASE_URL}/exams/${product.id}`,\n              data,\n              {\n                headers: {\n                  authorization: `Bearer ${getToken()}`\n                }\n              }).then((res) => {\n                handleAlertClose();\n                incrementCounter();\n                handleClose();\n                console.log(res)\n              })\n\n\n            }else{\n              axios.post(`${process.env.REACT_APP_BASE_URL}/exams`,\n              data,\n              {\n                headers: {\n                  authorization: `Bearer ${getToken()}`\n                }\n              }).then((res) => {\n                handleAlertClose();\n                incrementCounter();\n                handleClose();\n                console.log(res)\n              })\n\n            }\n\n\n\n          }\n          }\n\n        >\n          {({\n            setFieldValue,\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            touched,\n            values\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <Box\n                sx={{\n                  backgroundColor: 'background.default',\n                  minHeight: '100%',\n                  py: 3\n                }}\n              >\n\n                <Container maxWidth=\"lg\">\n\n                  <Card>\n                    <CardHeader\n\n                      title=\"Question\"\n                    />\n                    <CardContent style={{ maxHeight: 300, overflow: 'auto' }}>\n                                          <Divider />\n\n\n                      <TextField\n                        error={Boolean(touched.question && errors.question)}\n                        fullWidth\n                        helperText={touched.question && errors.question}\n                        label=\"Question\"\n                        multiline\n                        rows={6}\n                        margin=\"normal\"\n                        name=\"question\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"email\"\n                        value={values.question}\n                        variant=\"standard\"\n                      />\n                                      \n                      </CardContent>\n                  </Card>\n                    \n                <Box sx={{ pt: 3 }}>\n\n                  <Card>\n                    <CardHeader\n\n                      title=\"Choice\"\n                    />\n                    <Divider />\n                    <Grid\n                      container\n                      spacing={5}\n\n                    >\n\n                      <Grid\n                        item\n                        md={8}\n                        xs={12}\n                      >\n                        <CardContent style={{ maxHeight: 200, overflow: 'auto' }}>\n\n                          <Grid\n                            container\n                            spacing={5}\n\n                          >\n\n\n                            {inputField.map((field, index) => (\n\n                              <Grid\n                                item\n                                md={6}\n                                xs={12}\n                              >\n                                <div key={index}>\n\n\n\n                                  <TextField\n                                    name='choice'\n                                    label='choice'\n                                    value={inputField[index].choice}\n                                    style={{ width: '80%' }}\n                                    onChange={event => handleChangeInput(index, event)}\n                                    variant=\"outlined\"\n                                    required\n                                  >\n                                  </TextField>\n\n                                </div></Grid>\n\n                            ))};\n\n                            </Grid>\n                            <Divider orientation=\"vertical\" flexItem />\n\n\n                        </CardContent>\n                      </Grid>\n                      \n\n                      <Grid\n                        item\n                        md={4}\n                        xs={12}\n                      >\n                        <TextField\n                          error={Boolean(touched.answer && errors.answer)}\n                          helperText={touched.answer && errors.answer}\n                          label=\"Answer\"\n                          margin=\"normal\"\n                          name=\"answer\"\n                          rows={4}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          type=\"number\"\n                          value={values.answer}\n                          variant=\"outlined\"\n                        />\n                        <Box sx={{pr:2}}>\n                        <Grid\n                        item\n                        md={4}\n                        xs={12}\n                      >\n                        <TextField\n                          select\n                          fullwidth\n                          label=\"Select Category\"\n                          value={cats}\n                          onChange={handleChanges}\n                          variant=\"outlined\"\n                          required\n                          helperText=\"Please select Category\"\n                        >\n                          {category.map((option) => (\n                            <MenuItem key={option.label} value={option.value}>\n                              {option.label}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n                        </Grid>\n                        </Box>\n                      </Grid>\n                    </Grid>\n                    <Divider />\n                    <Box\n                      sx={{\n                        display: 'flex',\n                        justifyContent: 'flex-end',\n                        p: 2\n                      }}\n                    >\n\n                      <Grid\n                        container\n                        xs={12}\n                      >\n\n                        <Grid item xs={6}>\n                          <Button variant=\"contained\" startIcon={<AddIcon />}\n                            onClick={addfield}\n                          >\n                            Add Choice\n                        </Button>\n\n                        </Grid>\n\n                      </Grid>\n\n\n\n\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                      >\n                        Save\n                      </Button>\n                    </Box>\n                  </Card>\n\n                </Box>\n                </Container>\n              </Box>\n\n            </form>\n\n          )}\n        </Formik>\n\n\n      </Box>\n\n\n\n    </Dialog >\n  );\n}\n\nexport default Dialoog;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport * as React from 'react';\nimport Dialoog from './Dialog';\nimport { useNavigate } from 'react-router-dom';\n\n\n\n\nconst ProductListToolbar = ({incrementCounter, category, ...rest }) => {\n  const navigate = useNavigate();\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n \n  return (\n    <Box >\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end'\n        }}\n      >\n        <Dialoog open = {open} handleClose = {handleClose} product={null} category={category} incrementCounter={incrementCounter} />\n        <Button\n          onClick={handleClickOpen}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Add Questions\n      </Button>\n      </Box>\n      <Box sx={{ mt: 3 }}>\n        <Card>\n          <CardContent>\n            <Box sx={{ maxWidth: 500 }}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Search question\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n}\n\nexport default ProductListToolbar;\n","import PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n \n  Typography,\n  IconButton, \n\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport * as React from 'react';\nimport Dialoog from './Dialog';\nimport DeleteAlert from 'src/components/alertdialog/DeleteAlert';\nimport SuccessSnackBar from 'src/components/snackbar/SuccessSnackBar';\n\n\nconst ProductCard = ({incrementCounter, product, category, ...rest }) => {\n\n  const [snackopen, setSnackOpen] = React.useState(false);\n  const handleSnackOpen = () => {\n    setSnackOpen(true);\n};\n  \n\n  const [alertopen, setAlertOpen] = React.useState(false);\n\n\n  const handleClickAlertOpen = () => {\n    setAlertOpen(true);\n  };\n\n  const handleAlertClose = () => {\n    setAlertOpen(false);\n  };\n\n  \n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  let choice = [];\n  var f = product.choice.split('\\\\n');\n  f.map((choices, index) => {\n    var ind = index + 1\n    var cho = \"Choice\" + ind + \". \" + choices + \" \";\n    choice.push(cho)\n\n  })\n\n  return (\n    <Card\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      }}\n      {...rest}\n    >\n\n      <Dialoog open={open} handleClose={handleClose} product={product} category={category} incrementCounter={incrementCounter} />\n      {alertopen && (<DeleteAlert id={product.id} handleSnackOpen={handleSnackOpen} open={alertopen} incrementCounter={incrementCounter} handleClose={handleAlertClose} endpoint=\"exams\" />)}\n      {snackopen && (<SuccessSnackBar />)}\n\n\n      <CardContent>\n      \n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          {product.question}\n        </Typography>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"body1\"\n        >\n          {choice}\n        </Typography>\n      </CardContent>\n      <Box sx={{ flexGrow: 1 }} />\n      <Divider />\n      <Box sx={{ p: 2 }}>\n        <Grid\n          container\n          spacing={2}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid\n            item\n            sx={{\n              alignItems: 'center',\n              display: 'flex'\n            }}\n          >\n            <Typography\n              color=\"textSecondary\"\n              display=\"inline\"\n              sx={{ pr: 1 }}\n              variant=\"body2\"\n            >\n\n              Category\n          </Typography>\n            <Typography>\n              {product.category.name}\n            </Typography>\n\n          </Grid>\n          <Grid\n            item\n            sx={{\n              alignItems: 'center',\n              display: 'flex'\n            }}\n          >\n\n\n\n            <IconButton onClick={handleClickOpen}>\n              <EditIcon color=\"action\" />\n            </IconButton>\n            <IconButton onClick={handleClickAlertOpen}>\n              <DeleteIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Box>\n    </Card>\n  );\n}\n\nProductCard.propTypes = {\n  product: PropTypes.object.isRequired\n};\n\nexport default ProductCard;\n","import {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    CircularProgress\n} from '@material-ui/core';\nimport * as React from 'react';\nimport axios from 'axios';\nimport { getToken } from 'src/helper/helpers';\nimport LoadingProgress from 'src/components/alertdialog/LoadingProgress';\n\n\n\nexport default function AddAlert({setSnackOpen,snackopen, handleSnackOpen, incrementCounter, setAdd, parentClose, data, id, endpoint, ...rest }) {\n    const [success, setSuccess] = React.useState(false);\n    const [child, setChild] = React.useState(true);\n    const handleCloseChild = () => {\n        setChild(false);\n    }\n\n\n    React.useEffect(() => {\n        axios.post(`${process.env.REACT_APP_BASE_URL}/categories`, data,\n            {\n                headers: {\n                    authorization: `Bearer ${getToken()}`\n                }\n            }).then((res) => {\n                console.log(res)\n                handleCloseChild();\n                incrementCounter();\n                parentClose();\n                setAdd();\n\n                //setSuccess(false);\n                handleSnackOpen();\n                //handleClose();\n\n\n            })\n    }, [])\n\n    return (\n        <Dialog\n            open={child}\n            keepMounted\n            onClose={handleCloseChild}\n            aria-describedby=\"alert-dialog-slide-description\"\n        >\n            {success && (<LoadingProgress />)}\n\n            <DialogTitle>Loading</DialogTitle>\n            <DialogContent>\n\n                <CircularProgress />\n            </DialogContent>\n            <DialogActions>\n            </DialogActions>\n        </Dialog>\n    );\n\n\n}\n","import * as React from 'react';\n\nimport {Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    Grid, TextField,  DialogTitle, Dialog } from '@material-ui/core';\nimport AddAlert from 'src/components/alertdialog/AddAlert';\nexport default function CustomersDialog(props) {\n\n    const {incrementCounter,handleSnackOpen, onClose, open } = props;\n    const [data,setData] = React.useState(); \n    const [add,setAdd] = React.useState(false);\n\n    return (\n        <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      {add &&(<AddAlert handleSnackOpen={handleSnackOpen} data={data} parentClose={onClose} incrementCounter={incrementCounter} setAdd={()=>setAdd(false)}/>)}\n      <Dialog onClose={onClose} open={open}>\n      <DialogTitle>Add Category</DialogTitle>\n      <Formik\n            initialValues={{\n             \n              name: '',\n             \n            }}\n            validationSchema={Yup.object().shape({\n              name: Yup.string().required('Password is required')\n            })}\n            onSubmit={values => {\n              const name = values.name;\n              const data = {\n                name: values.name\n              }\n              setData(data);\n              setAdd(true);\n            //   axios.post(`${process.env.REACT_APP_BASE_URL}/categories`,{name: values.name},\n            //   {\n            //     headers: {\n            //         authorization: `Bearer ${getToken()}`\n            //     }\n            // }).then((res)=>{\n            //     incrementCounter();\n            //     onClose();\n\n            //   }).catch((err)=>{\n            //     console.log(err)\n            //   })          \n            }\n          }\n           \n          >\n            \n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n      <Card>\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n           \n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                  error={Boolean(touched.name && errors.name)}\n                  fullWidth\n                  helperText={touched.name && errors.name}\n                  label=\"Name\"\n                  margin=\"normal\"\n                  name=\"name\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"text\"\n                  value={values.name}\n                  variant=\"outlined\"\n                />\n            </Grid>\n    \n       \n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n       \n            \n          >\n            Save\n          </Button>\n          \n        </Box>\n      </Card>\n    </form>\n            )}\n          </Formik>\n\n      \n      \n      \n    </Dialog>\n    </Box>\n    )\n}\n\n\n","import {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    TextField,\n    InputAdornment,\n    SvgIcon,\n    \n  } from '@material-ui/core';\n  import { Search as SearchIcon } from 'react-feather';\n  import * as React from 'react';\n  import CategoryDialog from './CategoryDialog';\n \n  \n  \n  const CategoryListToolbar = ({incrementCounter, ...rest}) => {\n    const [open, setOpen] = React.useState(false);\n    const [snackopen,setSnackOpen] = React.useState(false);\n  const handleSnackOpen = () =>{\n    setSnackOpen(true);\n  }\n\n    \n    \n  \n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    };\n   \n    return (\n      <Box >\n          <CategoryDialog handleSnackOpen={handleSnackOpen} incrementCounter={incrementCounter} onClose={handleClose} open={open}/>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end'\n          }}\n        >\n          <Button\n            onClick={handleClickOpen}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Add Category\n        </Button>\n        </Box>\n        <Box sx={{ mt: 3 }}>\n          <Card>\n            <CardContent>\n              <Box sx={{ maxWidth: 500 }}>\n                <TextField\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SvgIcon\n                          fontSize=\"small\"\n                          color=\"action\"\n                        >\n                          <SearchIcon />\n                        </SvgIcon>\n                      </InputAdornment>\n                    )\n                  }}\n                  placeholder=\"Search question\"\n                  variant=\"outlined\"\n                />\n              </Box>\n            </CardContent>\n          </Card>\n        </Box>\n      </Box>\n    );\n  }\n  \n  export default CategoryListToolbar;\n  ","import { useState} from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  IconButton,\n  Grid\n} from '@material-ui/core';\nimport * as React from 'react';\nimport DeleteAlert from 'src/components/alertdialog/DeleteAlert';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\n\nconst CategoryListResults = ({incrementCounter, categories, ...rest }) => {\n\n  const [selectedCategoryIds, setSelectedCategoryIds] = useState([]);\n\n\n  const [alertopen, setAlertOpen] = React.useState(false);\n \n  const handleClickAlertOpen = () => {\n    setAlertOpen(true);\n  };\n  const handleAlertClose = () => {\n    setAlertOpen(false);\n  };\n\n\n\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const [prod,setProduct] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [id,setId] = React.useState(0);\n  const [snackopen,setSnackOpen] = React.useState(false);\n  const handleSnackOpen = () =>{\n    setSnackOpen(true);\n  }\n\n  const handleClickOpen = (prod) => {\n    setProduct(prod);\n    setOpen(true);\n  };\n  \n\n  \n\n \n\n\n\n\n  const handleSelectAll = (event) => {\n    let newSelectedCategoryIds;\n    if (event.target.checked) {\n      newSelectedCategoryIds = categories.map((category) => category.id);\n    } else {\n      newSelectedCategoryIds = [];\n    }\n    setSelectedCategoryIds(newSelectedCategoryIds);\n    //setIsDisabled(true);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCategoryIds.indexOf(id);\n    let newSelectedCategoryIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCategoryIds = newSelectedCategoryIds.concat(selectedCategoryIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCategoryIds = newSelectedCategoryIds.concat(selectedCategoryIds.slice(1));\n    } else if (selectedIndex === selectedCategoryIds.length - 1) {\n      newSelectedCategoryIds = newSelectedCategoryIds.concat(selectedCategoryIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n  \n      newSelectedCategoryIds = newSelectedCategoryIds.concat(\n        selectedCategoryIds.slice(0, selectedIndex),\n        selectedCategoryIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCategoryIds(newSelectedCategoryIds);\n   \n  \n  };\n  \n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n  \n\n  \n\n  return (\n    <Card {...rest}>\n    {alertopen && (<DeleteAlert handleSnackOpen={handleSnackOpen} id={selectedCategoryIds} open={alertopen} incrementCounter={incrementCounter} handleClose={handleAlertClose} endpoint=\"categories\" />)}\n    <Grid container justifyContent=\"right\">\n    <IconButton color=\"primary\" disabled={selectedCategoryIds.length!==0?false:true} onClick={handleClickAlertOpen} \n    >\n          <DeleteIcon />\n    </IconButton>\n    </Grid>\n\n\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table\n            \n          >\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedCategoryIds.length === categories.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedCategoryIds.length > 0\n                      && selectedCategoryIds.length < categories.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                \n                <TableCell>\n                  Registration date\n                </TableCell>\n               \n              </TableRow>\n            </TableHead>\n            \n            <TableBody>\n              {categories.slice(page * limit, page * limit + limit).map((customer) => (\n                <TableRow\n                  hover\n                  key={customer.id}\n                  selected={selectedCategoryIds.indexOf(customer.id) !== -1}\n                  //onClick={()=>handleClickOpen(customer)}\n                >\n                  \n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedCategoryIds.indexOf(customer.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, customer.id)}\n                      value=\"true\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      sx={{\n                        alignItems: 'center',\n                        display: 'flex'\n                      }}\n                    >\n                   \n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {customer.name}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n            \n                  <TableCell>\n                    {moment(customer.published_at).format('DD/MM/YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n\n              \n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={categories.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n      \n     \n    </Card>\n    \n  );\n};\n\nCategoryListResults.propTypes = {\n  categories: PropTypes.array.isRequired\n};\n\nexport default CategoryListResults;\n","import {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    TextField,\n    InputAdornment,\n    SvgIcon,\n   \n  \n  } from '@material-ui/core';\n  import { Search as SearchIcon } from 'react-feather';\n  \n  import * as React from 'react';\n  import {useNavigate} from 'react-router-dom';\n  \n  const ResourcesListToolbar = ({incrementCounter,category, ...rest}) => {\n  \n  \n    let navigate = useNavigate();\n  \n    \n    return(\n    <Box >\n    \n      \n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end'\n        }}\n      >\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={()=>{navigate('/app/questions/createresource',{state:{category:category}})}}\n        >\n          Add Resource\n        </Button>\n      </Box>\n      <Box sx={{ mt: 3 }}>\n        <Card>\n          <CardContent>\n            <Box sx={{ maxWidth: 500 }}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Search customer\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n  }\n  \n  export default ResourcesListToolbar;\n  ","import * as React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    Grid, TextField, DialogTitle, Dialog, Avatar, MenuItem\n} from '@material-ui/core';\nimport axios from 'axios';\nimport { getToken } from 'src/helper/helpers';\nimport LoadingProgress from 'src/components/alertdialog/LoadingProgress';\n\n\n\nexport default function AdminDialog(props) {\n    const { incrementCounter, onClose, open, resource, category } = props;\n    const [image, setImage] = React.useState({\n        avatar: 'Image'\n    })\n \n\n    const handleUploadClick = event => {\n        var file = event.target.files[0];\n        setImage({\n            avatar: event.target.files[0]\n        });\n\n    };\n    const [cats, setCategory] = React.useState('');\n    const handleChanges = (event) => {\n        setCategory(event.target.value);\n    };\n    const [alertopen, setAlertOpen] = React.useState(false);\n\n  const handleClickAlertOpen = () => {\n    setAlertOpen(true);\n  };\n  const handleAlertClose = () => {\n    setAlertOpen(false);\n  };\n\n\n    return (\n        <Box\n            component=\"form\"\n            sx={{\n                '& .MuiTextField-root': { m: 1, width: '25ch' },\n            }}\n            noValidate\n            autoComplete=\"off\"\n        >\n                  {alertopen && (<LoadingProgress />)}\n\n            <Dialog onClose={onClose} open={open}>\n                <DialogTitle>Add Resources</DialogTitle>\n                <Formik\n                    initialValues={{\n                        description: resource != null ? resource.description : '',\n                        title: resource != null ? resource.title : '',\n                        image: resource != null && resource.image!= null? resource.image.url : '',\n\n                    }}\n                    validationSchema={Yup.object().shape({\n                        title: Yup.string().max(255).required('Title is required'),\n                        description: Yup.string().max(255).required('Description is required')\n                    })}\n                    onSubmit={values => {\n\n                        handleClickAlertOpen();\n                        const description = values.description;\n                        const title = values.title;\n                        const formData = new FormData();\n\n\n                        axios.put(`${process.env.REACT_APP_BASE_URL}/additional-resources/${resource.id}`, { title: title, description: description, category: { id: cats } }, {\n                            headers: {\n                                authorization: `Bearer ${getToken()}`\n                            }\n                        }).then((res) => {\n                            incrementCounter();\n                            onClose();\n                            if (image.avatar !== \"Image\") {\n                                formData.append('files', image.avatar)\n                                formData.append('field', 'image');\n                                formData.append('ref', 'additional-resources');\n                                formData.append('refId', res.data.id);\n                                axios.post(`${process.env.REACT_APP_BASE_URL}/upload`, formData, {\n                                    headers: {\n                                        'Content-Type': 'multipart/form-data',\n                                        authorization: `Bearer ${getToken()}`\n                                    }\n                                }).then((res) => {\n                                    console.log(res);\n                                    handleAlertClose();\n\n                                }).catch((err) => {\n                                    console.log(err);\n                                })\n                            }else {\n                                handleAlertClose();\n                            }\n                        }).catch((err) => {\n                            console.log(err);\n                        })\n                    }\n                    }\n\n                >\n\n                    {({\n                        errors,\n                        handleBlur,\n                        handleChange,\n                        handleSubmit,\n                        isSubmitting,\n                        touched,\n                        values\n                    }) => (\n                        <form onSubmit={handleSubmit}>\n                            <Card>\n                                <CardHeader\n                                    subheader=\"The information can be edited\"\n                                    title=\"Resources\"\n                                />\n                                <Divider />\n                                <CardContent>\n                                    <Grid\n                                        container\n                                        spacing={3}\n\n                                    >\n\n\n\n                                        <Grid\n                                            item\n                                            md={6}\n                                            xs={12}\n                                        >\n                                            <TextField\n                                                error={Boolean(touched.title && errors.title)}\n                                                fullWidth\n                                                helperText={touched.title && errors.title}\n                                                label=\"Title\"\n                                                margin=\"normal\"\n                                                name=\"title\"\n                                                onBlur={handleBlur}\n                                                onChange={handleChange}\n                                                type=\"text\"\n                                                value={values.title}\n                                                variant=\"outlined\"\n                                            />\n                                        </Grid>\n\n                                        <Grid\n                                            item\n                                            md={6}\n                                            xs={12}\n                                        >\n                                            <TextField\n                                                error={Boolean(touched.description && errors.description)}\n                                                fullWidth\n                                                helperText={touched.description && errors.description}\n                                                label=\"Description\"\n                                                margin=\"normal\"\n                                                name=\"description\"\n                                                onBlur={handleBlur}\n                                                onChange={handleChange}\n                                                multiline\n                                                rows=\"4\"\n                                                value={values.description}\n                                                variant=\"outlined\"\n                                            />\n                                        </Grid>\n\n                                        <Grid\n                                            item\n                                            md={6}\n                                            xs={12}\n                                        >\n                                            <TextField\n                                                select\n                                                label=\"Select Category\"\n                                                value={cats}\n                                                onChange={handleChanges}\n                                                helperText=\"Please select Category\"\n                                                required\n                                            >\n                                                {category.map((option) => (\n                                                    <MenuItem key={option.label} value={option.value}>\n                                                        {option.label}\n                                                    </MenuItem>\n                                                ))}\n                                            </TextField>\n\n                                        </Grid>\n\n\n\n\n                                    </Grid>\n\n                                    <Grid container justifyContent=\"center\" alignItems=\"center\">\n                                        <Grid\n                                            item\n                                        >\n                                            <Avatar\n                                                src={\n                                                    resource!=null? `${process.env.REACT_APP_BASE_URL}${values.image}`:\n                                                    \"N\"} sx={{\n\n\n                                                        height: 100,\n                                                        width: 100\n                                                    }} variant=\"square\">\n                                                Image\n                                            </Avatar>\n                                        </Grid>\n\n                                    </Grid>\n\n\n\n\n\n                                    <Grid container >\n\n                                        <Grid\n                                            item\n                                            md={6}\n                                            xs={12}\n                                        >\n                                            <input\n                                                style={{ display: 'none' }}\n                                                accept=\"image/*\"\n                                                id=\"contained-button-file\"\n                                                multiple\n                                                type=\"file\"\n                                                onChange={handleUploadClick}\n                                            />\n                                            <label htmlFor=\"contained-button-file\">\n                                                <Button\n                                                    component=\"span\"\n                                                    color=\"primary\"\n                                                    fullWidth\n                                                    variant=\"text\"\n                                                    onChange={handleUploadClick}\n\n                                                >\n                                                    Upload picture\n                                                </Button>\n\n\n                                            </label>\n                                        </Grid>\n\n\n\n                                    </Grid>\n\n\n                                </CardContent>\n                                <Divider />\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        justifyContent: 'flex-end',\n                                        p: 2\n                                    }}\n                                >\n                                    <Button\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        type=\"submit\"\n\n\n                                    >\n                                        Save details\n          </Button>\n\n                                </Box>\n                            </Card>\n                        </form>\n                    )}\n                </Formik>\n\n\n\n\n            </Dialog>\n        </Box>\n    )\n}\n\n\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  IconButton,\n  Grid,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport * as React from 'react';\nimport ResourcesDialog from './ResourcesDialog';\nimport DeleteAlert from 'src/components/alertdialog/DeleteAlert';\nimport SuccessSnackBar from 'src/components/snackbar/SuccessSnackBar';\n\n\nconst ResourcesListResults = ({category, incrementCounter, resources, ...rest }) => {\n  const [snackopen, setSnackOpen] = React.useState(false);\n  const handleSnackOpen = () => {\n    setSnackOpen(true);\n};\n  const [selectedResourceIds, setSelectedResourceIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const [resource, setResource] = useState([]);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [alertopen, setAlertOpen] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [id,setId] = React.useState(0);\n\n  \n\n \n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleClickAlertOpen = () => {\n    setAlertOpen(true);\n  };\n  const handleAlertClose = () => {\n    setAlertOpen(false);\n  };\n  // const handleDelete = (id) => {\n  //   axios.delete(`${process.env.REACT_APP_BASE_URL}/additional-resources/${id}`, {\n  //     headers: {\n  //       authorization: `Bearer ${getToken()}`\n  //     }\n  //   }).then((res) => {\n  //     if(res.status == 200){\n  //       navigate(0);\n  //     }\n      \n  //     console.log(res)\n  //   })\n\n  // }\n\n  const handleSelectAll = (event) => {\n    let newSelectedResourceIds;\n    if (event.target.checked) {\n      newSelectedResourceIds = resources.map((resource) => resource.id);\n      setIsDisabled(false);\n    } else {\n      newSelectedResourceIds = [];\n      setIsDisabled(true);\n    }\n    setSelectedResourceIds(newSelectedResourceIds);\n    //setIsDisabled(true);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedResourceIds.indexOf(id);\n    let newSelectedResourceIds = [];\n\n    if (selectedIndex === -1) {\n      setId(id);\n      setIsDisabled(false);\n      newSelectedResourceIds = newSelectedResourceIds.concat(selectedResourceIds, id);\n    } else if (selectedIndex === 0) {\n      setIsDisabled(true);\n      newSelectedResourceIds = newSelectedResourceIds.concat(selectedResourceIds.slice(1));\n    } else if (selectedIndex === selectedResourceIds.length - 1) {\n      newSelectedResourceIds = newSelectedResourceIds.concat(selectedResourceIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedResourceIds = newSelectedResourceIds.concat(\n        selectedResourceIds.slice(0, selectedIndex),\n        selectedResourceIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedResourceIds(newSelectedResourceIds);\n\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n    setPage(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleClickOpen = (res) => {\n    setResource(res);\n    setOpen(true);\n  };\n  console.log(selectedResourceIds);\n\n\n  return (\n    <Card {...rest}>\n      <ResourcesDialog\n        onClose={handleClose}\n        open={open}\n        resource={resource}\n        category={category}\n        incrementCounter={incrementCounter}\n      />\n      {alertopen && (<DeleteAlert id={selectedResourceIds} handleSnackOpen={handleSnackOpen} open={alertopen} incrementCounter={incrementCounter} handleClose={handleAlertClose} endpoint=\"additional-resources\" />)}\n\n      {/* {alertopen && (<DeleteAlert id={id} open={alertopen} handleSnackOpen={handleSnackOpen} handleClose={handleAlertClose} incrementCounter={incrementCounter} endpoint=\"additional-resources\" />)} */}\n      {snackopen && (<SuccessSnackBar />)}\n\n      <Grid container justifyContent=\"right\">\n\n        <IconButton color=\"primary\" disabled={selectedResourceIds.length!==0?false:true} onClick={handleClickAlertOpen} \n        >\n          <DeleteIcon />\n        </IconButton>\n\n\n      </Grid>\n\n\n      <PerfectScrollbar>\n\n        <Box sx={{ minWidth: 1050 }}>\n          <Table\n\n          >\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedResourceIds.length === resources.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedResourceIds.length > 0\n                      && selectedResourceIds.length < resources.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </TableCell>\n                <TableCell>\n                  Title\n                </TableCell>\n                <TableCell>\n                  Description\n                </TableCell>\n                <TableCell>\n                  Category\n                </TableCell>\n                <TableCell>\n                  image\n                </TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n\n              {resources.slice(page * limit, page * limit + limit).map((resource) =>\n               \n                <TableRow\n                  hover\n                  key={resource.id}\n                  selected={selectedResourceIds.indexOf(resource.id) !== -1}\n\n                >\n\n                  <TableCell padding=\"checkbox\">\n\n\n                    <Checkbox\n                      checked={selectedResourceIds.indexOf(resource.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, resource.id)}\n                      value=\"true\"\n                    />\n\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      sx={{\n                        alignItems: 'center',\n                        display: 'flex'\n                      }}\n                    >\n\n\n\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                        onClick={()=>handleClickOpen(resource)}\n\n                      >\n                        {resource.title}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {resource.description}\n                  </TableCell>\n\n\n                  <TableCell>\n                    {resource.category.name}\n                  </TableCell>\n\n                  <Avatar\n                     src={resource.image!=null?`${process.env.REACT_APP_BASE_URL}${resource.image.url}`:resource.media}\n                    sx={{ mr: 2 }}\n                  >\n\n\n                  </Avatar>\n\n\n\n                </TableRow>\n              )\n\n              }\n\n\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={resources.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n\n\n    </Card>\n\n  );\n};\n\nResourcesListResults.propTypes = {\n  admins: PropTypes.array.isRequired\n};\n\nexport default ResourcesListResults;\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid,\n  Pagination,\n  Tab\n} from '@material-ui/core';\nimport {\n  TabContext,\n  TabList,\n  TabPanel\n} from '@mui/lab';\nimport * as React from 'react';\nimport ProductListToolbar from 'src/components/product/ProductListToolbar';\nimport ProductCard from 'src/components/product//ProductCard';\nimport CategoryListToolbar from 'src/components/category/CategoryListToolbar';\nimport CategoryListResults from 'src/components/category/CategoryListResult';\nimport ResourcesListToolbar from 'src/components/additionalresources/ResourcesListToolbar';\nimport ResourcesListResults from 'src/components/additionalresources/ResourcesListResults';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getToken } from 'src/helper/helpers';\n\nconst ProductList = () => {\n  const [value, setValue] = React.useState('1');\n  const [counter, updateCounter] = useState(0);\n  const incrementCounter = () => {\n    updateCounter(counter + 1);\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const [state, setState] = useState({\n    response: [],\n\n  })\n  const [examcat, setexamcat] = useState({\n    response: [],\n\n  })\n  const [catresponse, setCatresponse] = useState({\n\n    response: []\n  })\n  const [resourcesresponse, setResourcesresponse] = useState({\n    response: []\n  })\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_BASE_URL}/exams`,\n      {\n        headers: {\n          authorization: `Bearer ${getToken()}`\n        }\n      }).then((res) => {\n        setState({ ...state, ['response']: res.data })\n      })\n    axios.get(`${process.env.REACT_APP_BASE_URL}/categories`,\n      {\n        headers: {\n          authorization: `Bearer ${getToken()}`\n        }\n      }\n    ).then((res) => {\n      const categories = []\n      res.data.map((data) => {\n        const entry = {\n          value: data.id,\n          label: data.name\n        }\n        categories.push(entry);\n      });\n      setCatresponse({ ...catresponse, ['response']: res.data })\n      setexamcat({ ...examcat, ['response']: categories })\n      // console.log(`dsfasfdasdf${categories[0].label}`)\n    })\n    axios.get(`${process.env.REACT_APP_BASE_URL}/additional-resources`,\n      {\n        headers: {\n          authorization: `Bearer ${getToken()}`\n        }\n      }).then((res) => {\n        setResourcesresponse({ ...resourcesresponse, ['response']: res.data })\n      })\n  }, [counter])\n\n  return (\n    <>\n      <Helmet>\n        <title>Quizs | Quiz App</title>\n      </Helmet>\n\n      <Box sx={{ width: '100%', typography: 'body1' }}>\n        <TabContext value={value}>\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n            <TabList onChange={handleChange} aria-label=\"lab API tabs example\" centered>\n              <Tab label=\"Questions\" value=\"1\" />\n              <Tab label=\"Categories\" value=\"2\" />\n              <Tab label=\"Additional Resources\" value=\"3\" />\n            </TabList>\n          </Box>\n          <TabPanel value=\"1\">\n            <Box\n              sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100%',\n                py: 3\n              }}\n            >\n              <Container maxWidth={false}>\n                <ProductListToolbar incrementCounter={incrementCounter} category={examcat.response} />\n                <Box sx={{ pt: 3 }}>\n                  <Grid\n                    container\n                    spacing={3}\n                  >\n                    {state.response.map((question) => (\n                      <Grid\n                        item\n                        key={question.id}\n                        lg={4}\n                        md={6}\n                        xs={12}\n                      >\n                        <ProductCard incrementCounter={incrementCounter} category={examcat.response} product={question} />\n                      </Grid>\n                    ))}\n                  </Grid>\n                </Box>\n                <Box\n                  sx={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    pt: 3\n                  }}\n                >\n                  <Pagination\n                    color=\"primary\"\n                    count={3}\n                    size=\"small\"\n                  />\n                </Box>\n\n              </Container>\n            </Box>\n\n          </TabPanel>\n          <TabPanel value=\"2\">\n            <CategoryListToolbar incrementCounter={incrementCounter} />\n            <CategoryListResults incrementCounter={incrementCounter} categories={catresponse.response} />\n          </TabPanel>\n          <TabPanel value=\"3\">\n            <ResourcesListToolbar incrementCounter={incrementCounter} category={examcat.response} />\n            <ResourcesListResults incrementCounter={incrementCounter} category={examcat.response} resources={resourcesresponse.response} />\n          </TabPanel>\n        </TabContext>\n      </Box>\n\n\n    </>\n  );\n}\nexport default ProductList;\n","import { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport axios from 'axios';\n\nconst Register = () => {\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <Helmet>\n        <title>Register | Quiz App</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              username:'',\n              email: '',\n              firstName: '',\n              lastName: '',\n              password: '',\n              policy: false\n            }}\n            validationSchema={\n              Yup.object().shape({\n                firstName: Yup.string().max(255).required('First name is required'),\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                lastName: Yup.string().max(255).required('Last name is required'),\n                password: Yup.string().max(255).required('password is required'),\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\n              })\n            }\n            onSubmit={values => {\n              const username = values.username;\n              const email = values.email;\n              const password = values.password;\n              const firstname = values.firstName;\n              const lastname = values.lastName\n              axios.post(`${process.env.REACT_APP_BASE_URL}/auth/local/register`,{username:username,password:password,email:email,first_name:firstname,last_name:lastname})\n              .then((res)=>{\n                console.log(res);\n\n              })\n              .catch((err)=>{\n                console.log(err);\n\n              })\n              // navigate('/app/dashboard', { replace: true });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box sx={{ mb: 3 }}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Create new account\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Use your email to create new account\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  fullWidth\n                  helperText={touched.firstName && errors.firstName}\n                  label=\"First name\"\n                  margin=\"normal\"\n                  name=\"firstName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  fullWidth\n                  helperText={touched.lastName && errors.lastName}\n                  label=\"Last name\"\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.username && errors.username)}\n                  fullWidth\n                  helperText={touched.username && errors.username}\n                  label=\"User name\"\n                  margin=\"normal\"\n                  name=\"username\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.username}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    ml: -1\n                  }}\n                >\n                  <Checkbox\n                    checked={values.policy}\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    I have read the\n                    {' '}\n                    <Link\n                      color=\"primary\"\n                      component={RouterLink}\n                      to=\"#\"\n                      underline=\"always\"\n                      variant=\"h6\"\n                    >\n                      Terms and Conditions\n                    </Link>\n                  </Typography>\n                </Box>\n                {Boolean(touched.policy && errors.policy) && (\n                  <FormHelperText error>\n                    {errors.policy}\n                  </FormHelperText>\n                )}\n                <Box sx={{ py: 2 }}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign up now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/login\"\n                    variant=\"h6\"\n                  >\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Register;\n","import PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n \n  Typography,\n  IconButton, \n\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport * as React from 'react';\nimport DeleteAlert from 'src/components/alertdialog/DeleteAlert';\nimport SuccessSnackBar from 'src/components/snackbar/SuccessSnackBar';\nimport Article from '@material-ui/icons/Article';\n\n\nconst ResourceCard = ({incrementCounter, resource, ...rest }) => {\n\n  const [snackopen, setSnackOpen] = React.useState(false);\n  const handleSnackOpen = () => {\n    setSnackOpen(true);\n};\n  \n\n  const [alertopen, setAlertOpen] = React.useState(false);\n\n\n  const handleClickAlertOpen = () => {\n    setAlertOpen(true);\n  };\n\n  const handleAlertClose = () => {\n    setAlertOpen(false);\n  };\n  if(snackopen){\n    \n  }\n\n  \n\n\n\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Card\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      }}\n      {...rest}\n    >\n\n      {alertopen && (<DeleteAlert id={resource.id} handleSnackOpen={handleSnackOpen} open={alertopen} incrementCounter={incrementCounter} handleClose={handleAlertClose} endpoint=\"exam-resources\" />)}\n      {snackopen && (<SuccessSnackBar />)}\n\n\n      <CardContent>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            pb: 3\n          }}\n        >\n          <Avatar\n            alt=\"resource\"\n            variant=\"square\"\n          >\n            <Article />\n          </Avatar>\n        </Box>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          {resource.title}\n        </Typography>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"body1\"\n        >\n          {resource.title}\n        </Typography>\n      </CardContent>\n      <Box sx={{ flexGrow: 1 }} />\n      <Divider />\n      <Box sx={{ p: 2 }}>\n        <Grid\n          container\n          spacing={2}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid\n            item\n            sx={{\n              alignItems: 'center',\n              display: 'flex'\n            }}\n          >\n            <Typography\n              color=\"textSecondary\"\n              display=\"inline\"\n              sx={{ pr: 1 }}\n              variant=\"body2\"\n            >\n\n              Category\n          </Typography>\n            <Typography>\n              {resource.category.name}\n            </Typography>\n\n          </Grid>\n          <Grid\n            item\n            sx={{\n              alignItems: 'center',\n              display: 'flex'\n            }}\n          >\n\n\n            <IconButton onClick={handleClickAlertOpen}>\n              <DeleteIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Box>\n    </Card>\n  );\n}\n\nResourceCard.propTypes = {\n  resource: PropTypes.object.isRequired\n};\n\nexport default ResourceCard;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container, Grid,Pagination } from '@material-ui/core';\nimport ResourceCard from 'src/components/settings/ResourcesCard';\nimport { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport { getToken } from 'src/helper/helpers';\n\nconst SettingsView = () => {\n\n  const [counter, updateCounter] = useState(0);\n  const incrementCounter = () => {\n    updateCounter(counter + 1);\n  }\n  const [state, setState] = useState({\n    response: [],\n  })\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_BASE_URL}/exam-resources`,\n      {\n        headers: {\n          authorization: `Bearer ${getToken()}`\n        }\n      }\n    ).then((res) => {\n      setState({ ...state, ['response']: res.data })\n    })\n  }, [counter])\n\n  return (\n    <>\n      <Helmet>\n\n        <title>Resources | Quiz App</title>\n      </Helmet>\n      {/* {snackopen && (<SuccessSnackBar />)} */}\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n                <Box sx={{ pt: 3 }}>\n                  <Grid\n                    container\n                    spacing={3}\n                  >\n                    {state.response.map((question) => (\n                      <Grid\n                        item\n                        key={question.id}\n                        lg={4}\n                        md={6}\n                        xs={12}\n                      >\n              <ResourceCard incrementCounter={incrementCounter} resource={question} />\n              </Grid>\n                    ))}\n                  </Grid>\n                </Box>\n                <Box\n                  sx={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    pt: 3\n                  }}\n                >\n                  <Pagination\n                    color=\"primary\"\n                    count={3}\n                    size=\"small\"\n                  />\n                </Box>\n\n              </Container>\n       \n      </Box>\n    </>);\n\n}\nexport default SettingsView;\n","import { Link as RouterLink, useNavigate, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport LoadingProgress from 'src/components/alertdialog/LoadingProgress';\nimport {\n    Box,\n    Button,\n    Container,\n    Card,\n    CardHeader,\n    CardContent,\n    Divider,\n    Grid,\n    MenuItem,\n    TextField,\n    FormControlLabel,\n    Radio,\n    RadioGroup,\n    FormControl,\n    FormLabel\n} from '@material-ui/core';\nimport { getToken } from 'src/helper/helpers';\nimport * as React from 'react';\nimport Voucher from 'voucher-code-generator';\nimport { LocationCity } from '@material-ui/icons';\n\n\nconst AddCustomer = () => {\n\n    const [radio, setRadio] = React.useState('');\n    const handleRadioChange = (event) => {\n        setRadio(event.target.value);\n\n\n    };\n\n    const navigate = useNavigate();\n    const [alertopen, setAlertOpen] = React.useState(false);\n    const handleClickAlertOpen = () => {\n        setAlertOpen(true);\n    };\n    const handleAlertClose = () => {\n        setAlertOpen(false);\n    };\n    const Services = [\n        {\n            value: 1,\n            label: 'Silver',\n        },\n        {\n            value: 2,\n            label: 'Gold',\n\n        },\n        {\n            value: 3,\n            label: 'Platinum',\n\n        },\n    ];\n    const [service, setService] = React.useState('');\n\n    const handleChanges = (event) => {\n        setService(event.target.value);\n    };\n\n    const [cats, setCategory] = React.useState('');\n    const handleCategoryChange = (event) => {\n        setCategory(event.target.value);\n    }\n    const [location, setLocation] = React.useState('');\n    const handleLocationChange = (event) => {\n        setLocation(event.target.value);\n    }\n    console.log(location.state);\n\n    const [examcat, setexamcat] = React.useState({\n        response: [],\n    \n      })\n      const [country, setCountry] = React.useState({\n        response: [],\n    \n      })\n\n\n    React.useEffect(() => {\n        axios.get(`${process.env.REACT_APP_BASE_URL}/categories`,\n            {\n                headers: {\n                    authorization: `Bearer ${getToken()}`\n                }\n            }\n        ).then((res) => {\n            const categories = []\n            res.data.map((data) => {\n                const entry = {\n                    value: data.id,\n                    label: data.name\n                }\n                categories.push(entry);\n            });\n            setexamcat({ ...examcat, ['response']: categories })\n\n\n            // console.log(`dsfasfdasdf${categories[0].label}`)\n        })\n        axios.get(`${process.env.REACT_APP_BASE_URL}/locations`,\n            {\n                headers: {\n                    authorization: `Bearer ${getToken()}`\n                }\n            }\n        ).then((res) => {\n            const locations = []\n            res.data.map((data) => {\n                const entry = {\n                    value: data.id,\n                    label: data.name\n                }\n                locations.push(entry);\n            });\n            setCountry({ ...country, ['response']: locations })\n\n\n        })\n\n    }, []);\n    console.log(examcat.response);\n    return (\n        <>\n            <Helmet>\n                <title>Customers | Quiz App</title>\n            </Helmet>\n\n\n            {alertopen && (<LoadingProgress />)}\n            {/* {snackopen && (<SuccessSnackBar />)} */}\n\n\n\n\n\n            <Box\n                sx={{\n                    backgroundColor: 'background.default',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    justifyContent: 'center'\n                }}\n            >\n\n                <Container maxWidth=\"sm\">\n                    <Formik\n                        initialValues={{\n                            email: '',\n                            firstname: '',\n                            lastname: '',\n                        }}\n                        validationSchema={Yup.object().shape({\n                            email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                            firstname: Yup.string().max(255).required('First Name is required'),\n                            lastname: Yup.string().max(255).required('Last Name is required'),\n\n                        })}\n                        onSubmit={(values, { setSubmitting }) => {\n                            const firstname = values.firstname;\n                            const lastname = values.lastname;\n                            const email = values.email;\n                            const voucher = Voucher.generate({\n                                length: 8,\n                            })[0];\n\n                            const data = {\n                                firstName: firstname,\n                                lastName: lastname,\n                                email: email,\n                                voucher: voucher,\n                                service: { id: service },\n                                category: { id: cats },\n                                location: {id: location},\n                                gender: radio,\n                            }\n\n                            handleClickAlertOpen();\n\n\n\n\n                            axios.post(`${process.env.REACT_APP_BASE_URL}/customers`, data,\n                                {\n                                    headers: {\n                                        authorization: `Bearer ${getToken()}`\n                                    }\n                                }).then((res) => {\n                                    navigate('/app/customers', { replace: true, state: { snack: true } });\n                                    //handleSnackOpen();\n                                    handleAlertClose();\n                                    //setSnackOpen(true);\n                                }).catch((err) => {\n                                })\n\n                        }}\n\n                    >\n\n                        {({\n\n                            errors,\n                            handleBlur,\n                            handleChange,\n                            handleSubmit,\n                            isSubmitting,\n                            touched,\n                            values\n                        }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Card>\n                                    <CardHeader\n                                        subheader=\"The information can be edited\"\n                                        title=\"Profile\"\n                                    />\n                                    <Divider />\n                                    <CardContent>\n                                        <Grid\n                                            container\n                                            spacing={3}\n                                        >\n\n                                            <Grid\n                                                item\n                                                md={6}\n                                                xs={12}\n                                            >\n                                                <TextField\n                                                    error={Boolean(touched.firstname && errors.firstname)}\n                                                    fullWidth\n                                                    helperText={touched.firstname && errors.firstname}\n                                                    label=\"First Name\"\n                                                    margin=\"normal\"\n                                                    name=\"firstname\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    type=\"text\"\n                                                    value={values.firstname}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                md={6}\n                                                xs={12}\n                                            >\n\n                                                <TextField\n                                                    error={Boolean(touched.lastname && errors.lastname)}\n                                                    fullWidth\n                                                    helperText={touched.lastname && errors.lastname}\n                                                    label=\"Last Name\"\n                                                    margin=\"normal\"\n                                                    name=\"lastname\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    type=\"text\"\n                                                    value={values.lastname}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                md={6}\n                                                xs={12}\n                                            >\n\n                                                <FormControl component=\"fieldset\">\n                                                    <FormLabel component=\"legend\">Gender</FormLabel>\n                                                    <RadioGroup\n                                                        row\n                                                        aria-label=\"gender\"\n                                                        defaultValue=\"female\"\n                                                        name=\"radio-buttons-group\"\n                                                        value={radio}\n                                                        onChange={handleRadioChange}\n\n\n                                                    >\n                                                        <FormControlLabel value=\"Female\" control={<Radio required={true} />} label=\"Female\" />\n                                                        <FormControlLabel value=\"Male\" control={<Radio required={true} />} label=\"Male\" />\n                                                    </RadioGroup>\n                                                </FormControl>\n                                            </Grid>\n\n                                            <Grid\n                                                item\n                                                md={6}\n                                                xs={12}\n                                            >\n                                                <TextField\n                                                    error={Boolean(touched.email && errors.email)}\n                                                    fullWidth\n                                                    helperText={touched.email && errors.email}\n                                                    label=\"Email Address\"\n                                                    margin=\"normal\"\n                                                    name=\"email\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    type=\"email\"\n                                                    value={values.email}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                md={6}\n                                                xs={12}\n                                            >\n                                                <TextField\n                                                    id=\"outlined-select-service\"\n                                                    select\n                                                    label=\"Country\"\n                                                    name='country'\n                                                    value={location}\n                                                    onChange={handleLocationChange}\n                                                    helperText=\"Please select Your Location\"\n                                                    required\n                                                >\n                                                    {country.response.map((option) => (\n                                                        <MenuItem key={option.value} value={option.value}>\n                                                            {option.label}\n                                                        </MenuItem>\n                                                    ))}\n                                                </TextField>\n                                                \n\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                md={6}\n                                                xs={12}\n                                            >\n                                                <TextField\n                                                    id=\"outlined-select-service\"\n                                                    select\n                                                    label=\"Category\"\n                                                    name='category'\n                                                    value={cats}\n                                                    onChange={handleCategoryChange}\n                                                    helperText=\"Please select Category\"\n                                                    required\n                                                >\n                                                    {examcat.response.map((option) => (\n                                                        <MenuItem key={option.value} value={option.value}>\n                                                            {option.label}\n                                                        </MenuItem>\n                                                    ))}\n                                                </TextField>\n\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                md={6}\n                                                xs={12}\n                                            >\n                                                <TextField\n\n                                                    id=\"outlined-select-category\"\n                                                    select\n                                                    label=\"Service\"\n                                                    value={service}\n                                                    onChange={handleChanges}\n                                                    helperText=\"Please select Service\"\n                                                    required\n                                                >\n                                                    {Services.map((option) => (\n                                                        <MenuItem key={option.value} value={option.value}>\n                                                            {option.label}\n                                                        </MenuItem>\n                                                    ))}\n                                                </TextField>\n\n                                            </Grid>\n\n\n                                        </Grid>\n                                    </CardContent>\n                                    <Divider />\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            justifyContent: 'flex-end',\n                                            p: 2\n                                        }}\n                                    >\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            type=\"submit\"\n\n\n                                        >\n                                            Save details\n          </Button>\n\n                                    </Box>\n                                </Card>\n                            </form>\n                        )}\n                    </Formik>\n                </Container>\n            </Box>\n        </>\n    );\n};\n\nexport default AddCustomer;\n","import { useNavigate, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport {\n    Box,\n    Button,\n    Container,\n    Card,\n    CardHeader,\n    CardContent,\n    Divider,\n    Grid,\n    MenuItem,\n    TextField, Avatar, CardActions\n\n} from '@material-ui/core';\nimport { getToken } from 'src/helper/helpers';\nimport * as React from 'react';\nimport LoadingProgress from 'src/components/alertdialog/LoadingProgress';\n\n\n\nconst AddResource = (props) => {\n    let navigate = useNavigate();\n\n    let location = useLocation();\n\n    const { resource } = props;\n    const [image, setImage] = React.useState({\n        avatar: 'Image'\n    })\n    \n\n    const handleUploadClick = event => {\n        var file = event.target.files[0];\n        setImage({\n            avatar: event.target.files[0]\n        });\n    };\n    const [cats, setCategory] = React.useState('');\n    const handleChanges = (event) => {\n        setCategory(event.target.value);\n    };\n    const [alertopen, setAlertOpen] = React.useState(false);\n\n    const handleClickAlertOpen = () => {\n      setAlertOpen(true);\n    };\n    const handleAlertClose = () => {\n      setAlertOpen(false);\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title>Additional Resources | Quiz App</title>\n            </Helmet>\n            {alertopen && (<LoadingProgress />)}\n\n\n            <Box\n                sx={{\n                    backgroundColor: 'background.default',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    justifyContent: 'center'\n                }}\n            >\n\n                <Formik\n                    initialValues={{\n                        description: resource != null ? resource.description : '',\n                        title: resource != null ? resource.name : '',\n\n                    }}\n                    validationSchema={Yup.object().shape({\n                        title: Yup.string().max(255).required('Title is required'),\n                        description: Yup.string().max(255).required('Description is required'),\n                    })}\n                    onSubmit={values => {\n                        const description = values.description;\n                        const title = values.title;\n                        const formData = new FormData();\n                        handleClickAlertOpen();\n\n                        axios.post(`${process.env.REACT_APP_BASE_URL}/additional-resources`, { title: title, description: description, category: { id: cats } }, {\n                            headers: {\n                                authorization: `Bearer ${getToken()}`\n                            }\n                        }).then((res) => {\n                            console.log(res);\n                       \n                            if (image.avatar !== \"Image\") {\n\n                                formData.append('files', image.avatar)\n                                formData.append('field', 'image');\n                                formData.append('ref', 'additional-resources');\n                                formData.append('refId', res.data.id)\n                                axios.post(`${process.env.REACT_APP_BASE_URL}/upload`, formData, {\n                                    headers: {\n                                        'Content-Type': 'multipart/form-data',\n                                        authorization: `Bearer ${getToken()}`\n                                    }\n                                }).then((res) => {\n\n                                    if (res.status === 200) {\n                                        handleAlertClose();\n                                        navigate(-1);\n                                    }\n                                    console.log(res);\n\n                                }).catch((err) => {\n                                    handleAlertClose();\n                                    console.log(err);\n                                })\n\n                            } else {\n                                handleAlertClose();\n                                navigate(-1);\n                            }\n\n\n                        }).catch((err) => {\n                            handleAlertClose();\n                            console.log(err);\n                        })\n\n\n\n\n                    }\n                    }\n\n                >\n\n                    {({\n                        errors,\n                        handleBlur,\n                        handleChange,\n                        handleSubmit,\n                        isSubmitting,\n                        touched,\n                        values\n                    }) => (\n                        <form onSubmit={handleSubmit}>\n\n                            <Box\n                                sx={{\n                                    backgroundColor: 'background.default',\n                                    minHeight: '100%',\n                                    py: 3\n                                }}\n                            >\n                                <Container maxWidth=\"lg\">\n                                    <Grid\n                                        container\n                                        spacing={3}\n                                    >\n                                        <Grid\n                                            item\n                                            lg={4}\n                                            md={6}\n                                            xs={12}\n                                        >\n                                            <Card {...props}>\n                                                <CardContent>\n                                                    <Box\n                                                        sx={{\n                                                            alignItems: 'center',\n                                                            display: 'flex',\n                                                            flexDirection: 'column'\n                                                        }}\n                                                    >\n                                                        <Avatar\n                                                            variant=\"square\"\n                                                            src={\n                                                                image.avatar!==\"Image\"? URL.createObjectURL(image.avatar):\n                                                                \"N\"}\n                                                            sx={{\n                                                                height: 100,\n                                                                width: 100\n                                                            }}\n                                                        />\n\n                                                    </Box>\n                                                </CardContent>\n                                                <Divider />\n                                                <CardActions>\n\n\n                                                    <Grid container justify=\"center\" alignItems=\"center\">\n                                                        <input\n                                                            style={{ display: 'none' }}\n                                                            accept=\"image/*\"\n                                                            id=\"contained-button-file\"\n                                                            multiple\n                                                            type=\"file\"\n                                                            onChange={handleUploadClick}\n                                                        />\n                                                        <label htmlFor=\"contained-button-file\">\n                                                            <Button\n                                                                component=\"span\"\n                                                                color=\"primary\"\n                                                                fullWidth\n                                                                variant=\"text\"\n                                                                onChange={handleUploadClick}\n\n                                                            >\n                                                                Upload picture\n                                                </Button>\n\n\n                                                        </label>\n\n\n                                                    </Grid>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            lg={8}\n                                            md={6}\n                                            xs={12}\n                                        >\n                                            <Card>\n                                                <CardHeader\n                                                    subheader=\"The information can be edited\"\n                                                    title=\"Profile\"\n                                                />\n                                                <Divider />\n                                                <CardContent>\n                                                    <Grid\n                                                        container\n                                                        spacing={3}\n                                                    >\n                                                        <Grid\n                                                            item\n                                                            md={6}\n                                                            xs={12}\n                                                        >\n                                                            <TextField\n                                                                error={Boolean(touched.title && errors.title)}\n                                                                fullWidth\n                                                                helperText={touched.title && errors.title}\n                                                                label=\"Title\"\n                                                                margin=\"normal\"\n                                                                name=\"title\"\n                                                                onBlur={handleBlur}\n                                                                onChange={handleChange}\n                                                                type=\"text\"\n                                                                value={values.title}\n                                                                variant=\"outlined\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid\n                                                            item\n                                                            md={6}\n                                                            xs={12}\n                                                        >\n                                                            <TextField\n                                                                error={Boolean(touched.description && errors.description)}\n                                                                fullWidth\n                                                                helperText={touched.description && errors.description}\n                                                                label=\"Description\"\n                                                                margin=\"normal\"\n                                                                name=\"description\"\n                                                                onBlur={handleBlur}\n                                                                onChange={handleChange}\n                                                                multiline\n                                                                rows=\"4\"\n                                                                value={values.description}\n                                                                variant=\"outlined\"\n                                                            />\n                                                        </Grid>\n\n\n                                                        <Grid\n                                                            item\n                                                            md={6}\n                                                            xs={12}\n                                                        >\n                                                            <TextField\n                                                                select\n                                                                label=\"Select Category\"\n                                                                value={cats}\n                                                                onChange={handleChanges}\n                                                                helperText=\"Please select Category\"\n                                                                required\n                                                            >\n                                                                {location.state.category.map((option) => (\n                                                                    <MenuItem key={option.label} value={option.value}>\n                                                                        {option.label}\n                                                                    </MenuItem>\n                                                                ))}\n                                                            </TextField>\n                                                        </Grid>\n                                                    </Grid>\n                                                </CardContent>\n                                                <Divider />\n                                                <Box\n                                                    sx={{\n                                                        display: 'flex',\n                                                        justifyContent: 'flex-end',\n                                                        p: 2\n                                                    }}\n                                                >\n                                                    <Button\n                                                        color=\"primary\"\n                                                        variant=\"contained\"\n                                                        type=\"submit\"\n                                                    >\n                                                        Save details\n                                                    </Button>\n                                                </Box>\n                                            </Card>\n                                        </Grid>\n                                    </Grid>\n                                </Container>\n                            </Box>\n                        </form>\n                    )}\n                </Formik>\n            </Box>\n        </>\n    );\n};\n\nexport default AddResource;\n","import { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/components/DashboardLayout';\nimport MainLayout from 'src/components/MainLayout';\nimport Account from 'src/pages/Account';\nimport CustomerList from 'src/pages/CustomerList';\nimport Admin from 'src/pages/AdminList'\nimport Dashboard from 'src/pages/Dashboard';\nimport Login from 'src/pages/Login';\nimport NotFound from 'src/pages/NotFound';\nimport ProductList from 'src/pages/ProductList';\nimport Register from 'src/pages/Register';\nimport Settings from 'src/pages/Settings';\nimport AddCustomer from 'src/components/customer/AddCustomer';\nimport AddResource from 'src/components/additionalresources/AddResource';\n\nconst routes = [\n  {\n    path: 'app',\n    element: <DashboardLayout />,\n    children: [\n      { path: 'account', element: <Account /> },\n      { path: 'customers', element: <CustomerList /> },\n      { path: 'customers/create', element: <AddCustomer /> },\n      { path: 'dashboard', element: <Dashboard /> },\n      { path: 'questions', element: <ProductList /> },\n      { path: 'questions/createresource', element: <AddResource /> },\n      { path: 'settings', element: <Settings /> },\n      { path: 'admin', element: <Admin /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  },\n  {\n    path: '/',\n    element: <MainLayout />,\n    children: [\n      { path: 'login', element: <Login /> },\n      { path: 'register', element: <Register /> },\n      { path: '404', element: <NotFound /> },\n      { path: '/', element: <Navigate to=\"/app/dashboard\" /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  }\n];\n\nexport default routes;\n\nexport const unAuthorisedroutes = [{\n  path: '/',\n  element: <MainLayout />,\n  children: [\n    { path: 'login', element: <Login /> },\n    { path: 'register', element: <Register /> },\n    { path: '404', element: <NotFound /> },\n    { path: '/', element: <Navigate to=\"/login\" /> },\n    { path: '*', element: <Navigate to=\"/login\" /> }\n  ]\n}]\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport 'src/mixins/chartjs';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\nimport {isAuthenticated} from 'src/helper/helpers';\nimport {unAuthorisedroutes} from 'src/routes';\n\n\n\nconst App = () => {\n  const routing = useRoutes(routes);\n  const unauthrouting = useRoutes(unAuthorisedroutes);\n \n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n\n      {isAuthenticated()? routing : unauthrouting}\n\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render((\n  <HashRouter>\n    <App />\n  </HashRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}